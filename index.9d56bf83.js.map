{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/modal.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","<<jsx-config-pragma.js>>","src/js/data.js","src/js/pagination.js","src/js/movies.js","src/js/loader.js","src/js/actions-library.js","src/js/scroll-to-top.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// draft file\nconst movieModal = document.querySelector('.movie-modal');\nconst backdrop = document.querySelector('.backdrop');\n\nexport function modalInit() {\n  movieModal.addEventListener('click', onCloseClick);\n  backdrop.addEventListener('click', onCloseClick);\n}\n\nexport function openModal() {\n  movieModal.classList.remove('is-hidden');\n  movieModal.classList.add('open');\n  document.body.classList.add('modal-open');\n}\n\nexport function closeModal() {\n  movieModal.classList.remove('open');\n  movieModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n}\n\nfunction onCloseClick(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    return;\n  }\n  closeModal();\n}\n\nexport function printToModal(HTMLString) {\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.innerHTML = HTMLString;\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\nimport { openModal, printToModal } from './modal';\n\nexport function clearMovies() {\n  refs.cardsBox.innerHTML = '';\n}\n\nexport function showMovies(objectsArray) {\n  let codeHTML = '';\n  objectsArray.map(movie => {\n    codeHTML += `\n        <li class=\"card ${movie.watchedOrQueueClass}\">\n          <a href=\"\" class=\"card-link card-button-slider\" data-id=\"${movie.id}\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            \n              </a>\n              <div class=\"card-label-wrapper\">\n                <div class=\"card-label-in-watched\"></div>\n                <div class=\"card-label-in-queue\"></div>\n              </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow(3)} | ${\n      movie.releaseDate\n    }</b></p>\n        </li>`;\n  });\n\n  printHTMLmarkup(codeHTML);\n}\n\n// Show elements on page\nfunction printHTMLmarkup(codeHTML) {\n  refs.cardsBox.innerHTML += codeHTML;\n}\n\nexport function showMovieInfo(movieObject) {\n  let codeHTML = `\n      <div class=\"movie-picture-box\">\n        <img\n          src=\"${movieObject.posterPath}\"\n          alt=\"movie-picture\"\n          class=\"movie-picture\"\n        />\n      </div>\n      <div class=\"info-container\">\n        <h1 class=\"movie-title\">${movieObject.title}</h1>\n        <ul class=\"movie-list\">\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Vote / Votes</p>\n              <div class=\"vote-box property\">\n              <p class=\"property-vote property-accent\" id=\"vote\">${\n                movieObject.voteAverage\n              }</p>\n              <span class=\"vote-slash\">/</span>\n              <p class=\"property-vote property-vote-alt\" id=\"votes\">${\n                movieObject.voteCount\n              }</p>\n            </div>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Popularity</p>\n              <p class=\"property\" id=\"popularity\">${movieObject.popularity}</p>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Original Title</p>\n              <p class=\"property\" id=\"title\">${movieObject.title}</p>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Genre</p>\n              <p class=\"property\" id=\"genre\">${movieObject.genresInRow()}</p>\n          </li>\n          <li class=\"movie-item\">\n          <p class=\"movie-description\">Trailer</p>\n              <a href=${\n                movieObject.video\n              } target=\"_blank\" class=\"property\">▶ Play</a>\n          </li>\n        </ul>\n        <article class=\"article\">\n          <p class=\"article-caption\">About</p>\n          <p class=\"article-text\">\n            ${movieObject.overview}\n          </p>\n        </article>\n        <div class=\"button-box\">\n          <button class=\"movie-button watched-btn\"></button>\n          <button class=\"movie-button queue-btn\"></button>\n        </div>\n      </div>`;\n\n  printToModal(codeHTML);\n  openModal();\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\n// to repeat last search with new page get function in this.repeatLastSearch;\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n    this.repeatLastSearch = null;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    this.repeatLastSearch = (page = 1) => this.getTrending(page, isDay); //function assigns itself with only page parameter\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    this.repeatLastSearch = (page = 1) => this.searchMovie(query, page); //function assigns itself with only page parameter\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // MOVIE VIDEOS\n  getVideos(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n      mediaType: 'videos',\n\n      get split() {\n        return `${this.resource}/${this.id}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // PREMIERS\n  getPremiers() {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      mediaType: 'upcoming',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n",null,"export class DataStorage {\n  constructor() {\n    // singleton pattern\n    if (DataStorage._instance) {\n      return DataStorage._instance;\n    }\n    DataStorage._instance = this;\n    // singleton pattern\n  }\n\n  getWatched() {\n    try {\n      const serializedData = localStorage.getItem('watched');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  getQueue() {\n    try {\n      const serializedData = localStorage.getItem('queue');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  #setWatched(watchedArr) {\n    try {\n      localStorage.setItem('watched', JSON.stringify(watchedArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  #setQueue(queueArr) {\n    try {\n      localStorage.setItem('queue', JSON.stringify(queueArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  addToWatched(id) {\n    const watchedArr = this.getWatched();\n    if (watchedArr.includes(id)) {\n      return;\n    }\n    watchedArr.unshift(id);\n    this.#setWatched(watchedArr);\n  }\n\n  removeFromWatched(id) {\n    const watchedArr = this.getWatched();\n    const index = watchedArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    watchedArr.splice(index, 1);\n    this.#setWatched(watchedArr);\n  }\n\n  addToQueue(id) {\n    const queueArr = this.getQueue();\n    if (queueArr.includes(id)) {\n      return;\n    }\n    queueArr.unshift(id);\n    this.#setQueue(queueArr);\n  }\n\n  removeFromQueue(id) {\n    const queueArr = this.getQueue();\n    const index = queueArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    queueArr.splice(index, 1);\n    this.#setQueue(queueArr);\n  }\n}\n","// const bntPrevious = document.querySelector(\"#btn-prev\");\n// const btnNext = document.querySelector(\"#btn-next\");\n// const pageList = document.querySelector(\".pagination-list\");\n// const pageLink = document.querySelector(\".pagination-link\");\n\nimport { getMovieList } from './movies';\n\nfunction generatePagList(array, currentPage) {\n  // const prevLink = document.createElement(\"a\");\n  // prevLink.classList.add(\"pagination-button\");\n  // prevLink.id = \"btn-prev\";\n  // prevLink.href = \"#\";\n  // prevLink.title = \"Previous page\";\n  // const svgPrev = document.createElement(\"svg\");\n  // svgPrev.classList.add(\"pag-icon\");\n  // svgPrev.classList.add(\"arrow-left\");\n  // svgPrev.height = \"16\";\n  // const usePrev = document.createElement(\"use\");\n  // usePrev.href = \"./images/icons/arrows.svg#icon-arrow-left\";\n\n  // const nextLink = document.createElement(\"a\");\n  // nextLink.classList.add(\"pagination-button\");\n  // nextLink.id = \"btn-next\";\n  // nextLink.href = \"#\";\n  // nextLink.title = \"Next page\";\n  // const svgNext = document.createElement(\"svg\");\n  // svgNext.classList.add(\"pag-icon\");\n  // svgNext.classList.add(\"arrow-right\");\n  // svgNext.height = \"16\";\n  // const useNext = document.createElement(\"use\");\n  // useNext.href = \"./images/icons/arrows.svg#icon-arrow-right\";\n\n  // svgPrev.append(usePrev);\n  // prevLink.append(svgPrev);\n\n  // svgNext.append(useNext);\n  // nextLink.append(svgNext);\n\n  const pagination = document.querySelector('.pagination');\n\n  if (pagination) {\n    const list = document.createElement('ul');\n    list.classList.add('pagination-list');\n\n    for (let i = 0; i < array.length; i += 1) {\n      const item = document.createElement('li');\n      item.classList.add('pagination-item');\n      const link = document.createElement('a');\n      link.classList.add('pagination-link');\n      link.innerText = array[i];\n\n      // link.innerText.array[i] = currentPage;\n      if (array[i] === currentPage) {\n        item.classList.add('current');\n      }\n\n      if (typeof array[i] === 'number') {\n        link.addEventListener('click', event => {\n          event.preventDefault;\n          getMovieList('repeat', array[i], 'repeat');\n        });\n      } else {\n        if (i === 1) {\n          link.addEventListener('click', event => {\n            event.preventDefault;\n            getMovieList('repeat', array[i + 1] - 1, 'repeat');\n          });\n        } else {\n          link.addEventListener('click', event => {\n            event.preventDefault;\n            getMovieList('repeat', array[i - 1] + 1, 'repeat');\n          });\n        }\n      }\n\n      item.append(link);\n      list.append(item);\n      pagination.replaceChildren(list);\n    }\n\n    return pagination;\n  }\n}\n\nexport function showPagination(totalPages, currentPage) {\n  const lastPages = totalPages - 3;\n  if (totalPages === 1) {\n    // make buttons invisible or make the class = \"invisible\" for\n    // div.pagination\n  } else if (totalPages <= 7) {\n    const curArray = [];\n    generatePagList([1, 2, 3, 4, 5, 6, 7], currentPage);\n  } else if (totalPages > 7) {\n    if (currentPage <= 3) {\n      generatePagList([1, 2, 3, 4, 5, '...', `${totalPages - 1}`], currentPage);\n\n      // return;\n    } else if (currentPage >= lastPages) {\n      generatePagList(\n        [\n          1,\n          '...',\n          totalPages - 4,\n          totalPages - 3,\n          totalPages - 2,\n          totalPages - 1,\n          totalPages,\n        ],\n        currentPage\n      );\n      // return;\n    } else {\n      generatePagList(\n        [\n          1,\n          '...',\n          currentPage - 1,\n          currentPage,\n          currentPage + 1,\n          '...',\n          totalPages,\n        ],\n        currentPage\n      );\n    }\n    // pagination.append(markup);\n    // return;\n  }\n}\n// showPagination(5, 1);\n// console.log(typeof currentPage);\n// generatePagList([1, '...', 12, 13, 14, 15, 16, '...', 20], 14);\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_IMG_URL,\n  NOPOSTER_IMG_URL,\n  refs,\n  watchedIdArr,\n  queueIdArr,\n} from './global';\n\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies, showMovieInfo, clearMovies } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\nimport { DataStorage } from './data.js';\nimport { showPagination } from './pagination';\nconst dataStorage = new DataStorage();\n\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.title;\n    this.originalTitle = responseData.original_title;\n    this.popularity = responseData.popularity;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWatched = this.#getInWatched();\n    this.inQueue = this.#getInQueue();\n    this.voteAverage = responseData.vote_average;\n    this.voteCount = responseData.vote_count;\n    this.popularity = responseData.popularity;\n    this.overview = responseData.overview;\n    // this.video = null;\n    this.videos = [];\n\n    // В API метод getMovie возвращает жанры в свойстве \"genres\", значением которого есть массив объектов\n    // Поэтому, если не удалось получить список жанров - получаем из метода \"genres\"\n    if (!this.genres) {\n      this.genres = [];\n      responseData.genres.map(item => {\n        this.genres.push(item.id);\n      });\n    }\n  }\n\n  // Genres in row\n  genresInRow(maxCount = 0) {\n    return this.#parseGenresByString(maxCount);\n  }\n\n  get watchedOrQueueClass() {\n    return this.inWatched ? 'in-watched' : this.inQueue ? 'in-queue' : '';\n  }\n\n  get video() {\n    if (this.videos.length > 0) {\n      return this.videos[0]; // TEMP - getting only first video\n    }\n\n    return '';\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount - 1 && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWatched() {\n    return !!dataStorage.getWatched().find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!dataStorage.getQueue().find(item => item === this.id);\n  }\n\n  #getGenres() {\n    return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    //\n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n\n  getVideos(number = 0) {\n    // API.getVideos(this.id)\n    //   .then(video => {\n    //     console.log(video.results);\n    //     this.video = `https://www.youtube.com/watch?v=${video.results[number].key}`;\n    //   })\n\n    return API.getVideos(this.id);\n  }\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params, page = 1, mode = '') {\n  // depending on params choses API function\n  console.log('getMovies with params ', params, page, mode);\n  let queryFunction;\n  if (!params) {\n    queryFunction = () => API.getTrending();\n  }\n  if (params && !mode) {\n    queryFunction = () => API.searchMovie(params, page);\n  }\n  if (params && mode === 'repeat') {\n    queryFunction = () => API.repeatLastSearch(page);\n  }\n  if (params && mode === 'premiers') {\n    queryFunction = () => API.getPremiers();\n  }\n\n  queryFunction()\n    .then(responseData => {\n      console.log(\n        `Current page: ${responseData.page}, total pages: ${responseData.total_pages}`\n      ); // --> for pagination\n      showPagination(responseData.total_pages, responseData.page);\n      return responseData.results;\n    })\n    .then(movieList => {\n      const objectsArray = [];\n\n      movieList.map(movieItem => {\n        const movie = new Movie(movieItem); // class instance\n\n        objectsArray.push(movie);\n      });\n\n      clearMovies();\n      showMovies(objectsArray);\n    })\n    .catch(result => console.log(result));\n  return;\n}\n\nexport function getAndShowLibrary(idArray) {\n  let promisesMovies = [];\n  idArray.map(movieId => {\n    // try {\n    promisesMovies.push(\n      API.getMovie(movieId)\n        .then(response => {\n          const libMovie = new Movie(response);\n          response.genres = response.genres.map(item => {\n            return item.id;\n          });\n          return libMovie;\n        })\n        .catch(err => {\n          console.log(err);\n          return 0;\n        })\n    );\n    // } catch (err) {\n    //   console.log(err);\n    // }\n  });\n  Promise.all(promisesMovies)\n    .then(response => {\n      // console.log('Promise.all response is ', response);\n      const clearMovieArray = response.filter(item => item != 0);\n      // console.log('Filtered array is ', clearMovieArray);\n      showMovies(clearMovieArray);\n    })\n    .catch(result => console.log(result));\n}\n\nexport function getMovieInfo(id) {\n  if (id) {\n    API.getMovie(id).then(movieDetails => {\n      // Get movie info\n      const movie = new Movie(movieDetails);\n      movie.getVideos().then(videos => {\n        // Get movie video\n        videos.results.map(video => {\n          if (video.type === 'Trailer') {\n            movie.videos.push(`https://www.youtube.com/watch?v=${video.key}`);\n          }\n        });\n        console.log(movie.videos);\n        showMovieInfo(movie);\n      });\n    });\n    refs.movieModal.classList.remove('is-hidden');\n  }\n}\n\nexport function getPremiers() {\n  // depending on params requests API or data\n  getMovieList('premiers', 1, 'premiers');\n\n  /* ------------------\n\n      В это место можно добавить обработчик вывода трендов\n      Переменная \"objectsArray\" содержит массив объектов фильмов (массив карточек)\n      Структура объекта:\n      {\n        id:             [ Идентификатор фильма ]\n        inQueue:        [ Фильм находиться в очереди на просмотр ]\n        inWatched:      [ Фильм находиться в просмотренных ]\n        originalTitle:  [ Оригинальное название фильма ]\n        overview:       [ Описание фильма ]\n        popularity:     [ Популярность фильма ]\n        posterPath:     [ Ссылка на постер фильма ]\n        releaseDate:    [ Год фильма ]\n        title:          [ Название фильма ]\n        voteAverage:    [ Рейтинг фильма ]\n        voteCount:      [ Количество проголосовавших ]\n      }\n\n      Пример: \n        showMovies(objectsArray) - вывод списка на лгавную страницу\n\n      ------------------ */\n}\n","import { refs } from \"./global\";\nrefs.loader = document.querySelector('.lds-ripple');\nconst DELAY = 500;\n\nexport const showLoader = () => {\n    refs.loader.classList.add('loaded-hiding');\n    console.log(\"loader\");\n}\n\nexport const hideLoader = () => {\n    refs.loader.classList.add('loaded');\n    refs.loader.classList.remove('loaded-hiding');\n}\n\n// window.onload = function () {\n//     showLoader();\n//     window.setTimeout(hideLoader(), DELAY);\n// }\n\n// window.onload = function () {\n//     document.body.classList.add('loaded-hiding');\n//     window.setTimeout(function () {\n//         document.body.classList.add('loaded');\n//         document.body.classList.remove('loaded-hiding');\n//     }, DELAY);\n// }","import { DataStorage } from './data.js';\n// import { refs } from './global.js';\nconst data = new DataStorage();\n\n// action btn on the movie card\nexport function onQueueBtnCard(btn, id) {\n  const movieCard = btn.closest('.card');\n\n  if (movieCard.classList.contains('in-queue')) {\n    data.removeFromQueue(id);\n    movieCard.classList.remove('in-queue');\n\n    // movieModalBtn.classList.remove('active-btn');\n    // add notify\n    return;\n  }\n\n  if (movieCard.classList.contains('in-watched')) {\n    data.removeFromWatched(id);\n    movieCard.classList.remove('in-watched');\n    // movieModalBtn.classList.remove('active-btn');\n  }\n\n  movieCard.classList.add('in-queue');\n  // movieModalBtn.classList.add('active-btn');\n  data.addToQueue(id);\n  // add notify\n}\n\nexport function onWatchedBtnCard(btn, id) {\n  const movieCard = btn.closest('.card');\n\n  if (movieCard.classList.contains('in-watched')) {\n    data.removeFromWatched(id);\n    movieCard.classList.remove('in-watched');\n    // movieModalBtn.classList.remove('active-btn');\n    // add notify\n    return;\n  }\n\n  if (movieCard.classList.contains('in-queue')) {\n    data.removeFromQueue(id);\n    movieCard.classList.remove('in-queue');\n    // movieModalBtn.classList.remove('active-btn');\n  }\n\n  movieCard.classList.add('in-watched');\n  data.addToWatched(id);\n  // // movieModalBtn.classList.add('active-btn');\n  // add notify\n}\n\n// action btn in the movie modal\n// export function onQueueBtnModal(id) {\n//   const queueBtn = document.querySelector('.queue-btn');\n//   console.log('queueBtn', queueBtn);\n//     if (movieModalBtn.contains('active-btn')) {\n//       data.removeFromQueue(id);\n//     }\n//     movieModalBtn.classList.add('active-btn');\n//     data.addToQueue(id);\n// }\n\n// export function onWatchedBtnModal(id) {\n//   const watchedBtn = document.querySelector('.watched-btn');\n//   console.log('watchedBtn', watchedBtn);\n//     if (movieModalBtn.contains('active-btn')) {\n//       data.removeFromWatched(id);\n//     }\n//     movieModalBtn.classList.add('active-btn');\n//     data.addToWatched(id);\n// }\n","import { refs } from './global';\n\nrefs.scrollTop = document.querySelector('.scroll-top');\nrefs.body = document.querySelector(\"body\");\n\nrefs.body.onscroll = () => {\n    if (window.scrollY > 230) {\n        refs.scrollTop.classList.add(\"isShowScrollTop\");\n    } else if (window.scrollY < 230) {\n        refs.scrollTop.classList.remove(\"isShowScrollTop\")\n    }\n}\n\nexport function onClickScrollTop() {\n    window.scrollTo(0, 0);\n}","// module for interface elements and their event listeners\n\nimport { API_KEY, refs, watchedIdArr, queueIdArr } from './global';\nimport {\n  getMovieList,\n  getMovieInfo,\n  getAndShowLibrary,\n  getPremiers,\n} from './movies';\nimport { modalInit } from './modal';\nimport { clearMovies } from './markup';\nimport { showLoader, hideLoader } from './loader';\n\nimport { DataStorage } from './data';\nimport { onQueueBtnCard, onWatchedBtnCard } from './actions-library';\n\nimport { onClickScrollTop } from './scroll-to-top';\n\nconst data = new DataStorage();\n\nconst SCROLL_PAGE_LEN = 6;\nlet currentLibraryArr = [];\nconst pageObserver = new IntersectionObserver(onScroll, {\n  rootMargin: '0px 0px 200px 0px',\n});\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n  // showLoader();\n  // hideLoader();\n\n  modalInit();\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.movie-modal');\n  refs.searchForm = document.querySelector('#movie-search');\n  refs.observeTarget = document.querySelector('.sentinel');\n  refs.scrollTop = document.querySelector('.scroll-top');\n  refs.body = document.querySelector('body');\n  refs.cardsSection = document.querySelector('.cards-section');\n  refs.pagination = document.querySelector('.pagination');\n  refs.searchInput = document.querySelector('.search-input');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    refs.searchForm.addEventListener('submit', onMoviesSearch);\n    refs.cardsBox.addEventListener('click', onActionMovieCard);\n    refs.scrollTop.addEventListener('click', onClickScrollTop);\n  } catch (error) {\n    console.log(error);\n  }\n  getMovieList();\n\n  // when init page, check localStorage\n  data.getQueue();\n  data.getWatched();\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  // location.reload();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n  refs.pagination.classList.remove('on-empty-library');\n  refs.cardsSection.classList.remove('empty-library');\n  refs.cardsBox.classList.remove('hide-labels');\n\n  pageObserver.unobserve(refs.observeTarget);\n\n  refs.searchInput.value = '';\n  clearMovies();\n  getMovieList();\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  refs.cardsBox.classList.add('hide-labels');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n\n  refs.pagination.classList.add('on-empty-library');\n  if (data.getWatched().length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    onLibraryWatchBtnClick();\n  }\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  if (data.getWatched().length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    refs.cardsSection.classList.remove('empty-library');\n    clearMovies();\n    // getAndShowLibrary(currentLibraryArr);\n    currentLibraryArr = data.getWatched();\n    pageObserver.observe(refs.observeTarget);\n  }\n  // clearMovies();\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  if (data.getQueue().length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    refs.cardsSection.classList.remove('empty-library');\n    clearMovies();\n    currentLibraryArr = data.getQueue();\n    pageObserver.observe(refs.observeTarget);\n  }\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n\nfunction onMoviesSearch(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value;\n  refs.cardsBox.innerHTML = '';\n  clearMovies();\n  getMovieList(query);\n}\n\nfunction onActionMovieCard(event) {\n  event.preventDefault();\n\n  let btnClicked = false;\n\n  event.path.map(currentMovieLink => {\n    // check btn events on the movie card and add/delete to/from the library\n    if (currentMovieLink.nodeName === 'BUTTON') {\n      const currentMovieId = currentMovieLink.closest('.card-link').dataset.id;\n      const currentMovieIdNum = Number(currentMovieId);\n\n      if (currentMovieLink.classList.contains('in-queue')) {\n        onQueueBtnCard(currentMovieLink, currentMovieIdNum);\n      } else if (currentMovieLink.classList.contains('in-watched')) {\n        onWatchedBtnCard(currentMovieLink, currentMovieIdNum);\n      }\n      btnClicked = true;\n      // event.stopImmediatePropagation();\n    }\n\n    // catch a movie link and open the movie modal\n    if (currentMovieLink.nodeName === 'A' && !btnClicked) {\n      const currentMovieId = currentMovieLink.dataset.id;\n      const currentMovieIdNum = Number(currentMovieId);\n      getMovieInfo(currentMovieId);\n\n      // event.stopPropagation();\n    }\n  });\n}\n\nfunction onScroll() {\n  console.log(`i'm scrolling to the infinity`);\n  if (currentLibraryArr.length > SCROLL_PAGE_LEN) {\n    const newPage = currentLibraryArr.splice(0, SCROLL_PAGE_LEN);\n    getAndShowLibrary(newPage);\n    return;\n  }\n  pageObserver.unobserve(refs.observeTarget);\n  getAndShowLibrary(currentLibraryArr);\n}\n","import './sass/main.scss'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\n\nimport { DataStorage } from './js/data';\nconst data = new DataStorage();\n\nconst temporaryWatchedList = [\n  299536, 383498, 500664, 466282, 455980, 62286, 631843, 294793, 22949, 547016,\n  11635, 785663, 22660, 9547, 6977, 14912, 6957, 11520, 752505, 498743, 9627,\n  26518, 212, 156981, 13280, 15602, 282296, 498301, 72640, 69778, 488818, 11331,\n  43345, 543580, 429203, 31592, 40719, 83989, 297462, 74654, 59973, 44919,\n  28124, 915659, 78734, 9629, 913867, 40685, 79775, 44675, 40369, 351281, 25796,\n  55086, 248688, 967540, 121163, 620897, 67149, 85706, 59906, 88769, 983101,\n  309049, 75864, 29400, 299536, 383498, 500664, 466282, 455980, 62286, 631843,\n];\nconst temporaryQueueList = [\n  489931, 454283, 421792, 429300, 857, 470918, 379686, 340102, 529203, 11688,\n  755812, 18239, 11596, 62838, 597316, 820446, 13417, 11699, 10985, 975278,\n  13931, 3131, 772, 11025, 1103, 12637, 14011, 4960, 3681, 214597, 10952, 13761,\n  928, 15363, 277432, 9686, 14536, 9262, 10641, 11400, 553903, 37534, 183443,\n  567220, 79723, 382272, 9731, 95608, 10473, 497864, 5227, 21430, 30874, 9558,\n  46523, 496274, 10281, 299513, 18222, 197696, 19616, 4728, 12572, 396398,\n  11308, 36850,\n];\n\n// for (let i = 0; i < temporaryWatchedList.length; i += 1) {\n//   data.addToWatched(temporaryWatchedList[i]);\n// }\n// for (let i = 0; i < temporaryQueueList.length; i += 1) {\n//   data.addToQueue(temporaryQueueList[i]);\n// }\n// console.log(data.getWatched());\n// console.log(data.getQueue());\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$4c5b307740f9440c$export$a9861bd62f48e142","$4c5b307740f9440c$export$21666b427502ea6d","$665014edacbfe17b$exports","instance","Constructor","$82ce8d6f4ce6ea51$exports","receiver","privateSet","fn","$b5362597a15e80da$exports","$b5362597a15e80da$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$40873ecf3c18e122$var$movieModal","document","querySelector","$40873ecf3c18e122$var$backdrop","$40873ecf3c18e122$var$onCloseClick","event","nodeName","classList","remove","body","$1457a8b41868a85b$export$2de6f981755ee2d3","cardsBox","innerHTML","$1457a8b41868a85b$export$ee74f1750741a03b","objectsArray","codeHTML","map","movie","concat","watchedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","$1457a8b41868a85b$var$printHTMLmarkup","$1457a8b41868a85b$export$484a3397ac1ebd1","movieObject","HTMLString","voteAverage","voteCount","popularity","video","overview","$45eb949e2189fca4$exports","JSON","parse","$90f63e501fde6f2e$var$_fetchQuery","WeakSet","$90f63e501fde6f2e$var$_loadGenres","$90f63e501fde6f2e$export$2e2bcd8739ae039","APIService","$parcel$interopDefault","this","_instance","searchQuery","genres","repeatLastSearch","$90f63e501fde6f2e$var$loadGenres","call","pageNum","arguments","isDay","pathParams","resource","mediaType","timeWindow","split","searchParams","URLSearchParams","api_key","page","_this","getTrending","$90f63e501fde6f2e$var$fetchQuery","query","searchMovie","movieId","fetch","then","response","ok","Error","status","json","list","result","console","log","$58cc814870db97d4$var$_setWatched","$58cc814870db97d4$var$_setQueue","$58cc814870db97d4$export$e95767ffe2e60cec","DataStorage","serializedData","localStorage","getItem","err","error","watchedArr","getWatched","includes","unshift","$58cc814870db97d4$var$setWatched","index","indexOf","splice","queueArr","getQueue","$58cc814870db97d4$var$setQueue","setItem","stringify","$dfaf77c789ce7a24$var$generatePagList","array","currentPage","pagination","item","createElement","link","innerText","addEventListener","preventDefault","$3336333d54cdc52e$export$a7ba856b7be83d1e","append","replaceChildren","i1","_loop","$dfaf77c789ce7a24$export$f93f175716c54a10","totalPages","lastPages","$3336333d54cdc52e$var$dataStorage","$3336333d54cdc52e$var$_parseGenresByString","$3336333d54cdc52e$var$_getInWatched","$3336333d54cdc52e$var$_getInQueue","$3336333d54cdc52e$var$_getGenres","$3336333d54cdc52e$var$_getPosterPath","$3336333d54cdc52e$var$Movie","Movie","responseData","$3336333d54cdc52e$var$getPosterPath","poster_path","originalTitle","original_title","genre_ids","release_date","substr","inWatched","$3336333d54cdc52e$var$getInWatched","inQueue","$3336333d54cdc52e$var$getInQueue","vote_average","vote_count","videos","push","maxCount","$3336333d54cdc52e$var$parseGenresByString","$3336333d54cdc52e$var$API","getVideos","genreNames","findValue","genreList","find","_this1","name","$3336333d54cdc52e$var$getGenres","join","getGenres","params","queryFunction","mode","getPremiers","total_pages","results","movieList","movieItem","catch","$3336333d54cdc52e$export$d41fb6dd6e813260","idArray","promisesMovies","getMovie","libMovie","Promise","all","filter","loader","$0f064311e4e36b66$var$data","$0f064311e4e36b66$export$ea841437d939b35","btn","movieCard","closest","contains","removeFromQueue","removeFromWatched","addToQueue","$0f064311e4e36b66$export$d3821a3c06848687","addToWatched","$6325c7dcddb2ec4f$export$d7dc0f5f152d77a7","window","scrollTo","scrollTop","onscroll","scrollY","$cdc8bba1cf7e6fe0$var$data","$cdc8bba1cf7e6fe0$var$currentLibraryArr","$cdc8bba1cf7e6fe0$var$pageObserver","IntersectionObserver","unobserve","observeTarget","rootMargin","$cdc8bba1cf7e6fe0$var$onHomeLinkClick","header","cardsSection","searchInput","$cdc8bba1cf7e6fe0$var$onLibraryLinkClick","libraryWatchBtn","libraryQueBtn","$cdc8bba1cf7e6fe0$var$onLibraryWatchBtnClick","observe","$cdc8bba1cf7e6fe0$var$onLibraryQueBtnClick","$cdc8bba1cf7e6fe0$var$openTeamModal","$cdc8bba1cf7e6fe0$var$checkKeyPress","$cdc8bba1cf7e6fe0$var$closeTeamModal","removeEventListener","code","$cdc8bba1cf7e6fe0$var$onBackdropClick","currentTarget","$cdc8bba1cf7e6fe0$var$onMoviesSearch","elements","$cdc8bba1cf7e6fe0$var$onActionMovieCard","btnClicked","path","currentMovieLink","currentMovieId","dataset","currentMovieIdNum","Number","currentMovieId1","movieDetails","type","movieModal","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","searchForm"],"version":3,"file":"index.9d56bf83.js.map"}