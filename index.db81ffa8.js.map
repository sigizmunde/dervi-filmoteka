{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/modal.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","src/js/movies.js","src/js/loader.js","src/js/controller.js","src/js/data.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// draft file\nconst movieModal = document.querySelector('.movie-modal');\nconst backdrop = document.querySelector('.backdrop');\n\nexport function modalInit() {\n  movieModal.addEventListener('click', onCloseClick);\n  backdrop.addEventListener('click', onCloseClick);\n}\n\nexport function openModal() {\n  movieModal.classList.remove('is-hidden');\n  movieModal.classList.add('open');\n  document.body.classList.add('modal-open');\n}\n\nexport function closeModal() {\n  movieModal.classList.remove('open');\n  movieModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n}\n\nfunction onCloseClick(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    return;\n  }\n  closeModal();\n}\n\nexport function printToModal(HTMLString) {\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.innerHTML = HTMLString;\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\nimport { openModal, printToModal } from './modal';\n\nexport function showMovies(objectsArray) {\n  codeHTML = '';\n  objectsArray.map(movie => {\n    codeHTML += `\n        <li class=\"card ${movie.wachedOrQueueClass}\">\n          <a href=\"\" class=\"card-link\" movie-id=\"${movie.id}\">\n            <div class=\"card-button-slider\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            </div>\n            <div class=\"card-label-wrapper\">\n              <div class=\"card-label-in-watched\"></div>\n              <div class=\"card-label-in-queue\"></div>\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow(3)} | ${\n      movie.releaseDate\n    }</b></p>\n            </div>\n          </a>\n        </li>`;\n  });\n\n  printHTMLmarkup(codeHTML);\n}\n\n// Show elements on page\nfunction printHTMLmarkup(codeHTML) {\n  refs.cardsBox.innerHTML = codeHTML;\n}\n\nexport function showMovieInfo(movieObject) {\n  codeHTML = `\n      <div class=\"movie-picture-box\">\n        <img\n          src=\"${movieObject.posterPath}\"\n          alt=\"movie-picture\"\n          class=\"movie-picture\"\n        />\n      </div>\n      <div class=\"info-container\">\n        <h1 class=\"movie-title\">${movieObject.title}</h1>\n        <ul class=\"movie-list\">\n          <li class=\"movie-items item-right\">\n            <div class=\"description-box\">\n              <p class=\"movie-description\">Vote / Votes</p>\n              <p class=\"movie-description\">Popularity</p>\n              <p class=\"movie-description\">Original Title</p>\n              <p class=\"movie-description\">Genre</p>\n            </div>\n          </li>\n          <li class=\"movie-items\">\n            <div class=\"property-box\">\n              <div class=\"vote-box property\">\n                <p class=\"property-vote property-accent\" id=\"vote\">${\n                  movieObject.voteAverage\n                }</p>\n                <span class=\"vote-slash\">/</span>\n                <p class=\"property-vote property-vote-alt\" id=\"votes\">${\n                  movieObject.voteCount\n                }</p>\n              </div>\n              <p class=\"property\" id=\"popularity\">${movieObject.popularity}</p>\n              <p class=\"property\" id=\"title\">${movieObject.title}</p>\n              <p class=\"property\" id=\"genre\">${movieObject.genresInRow()}</p>\n            </div>\n          </li>\n        </ul>\n        <article class=\"article\">\n          <p class=\"article-caption\">About</p>\n          <p class=\"article-text\">\n            ${movieObject.overview}\n          </p>\n        </article>\n        <div class=\"button-box\">\n          <button class=\"movie-button primary-btn\">add to Watched</button>\n          <button class=\"movie-button\">add to queue</button>\n        </div>\n      </div>`;\n\n  printToModal(codeHTML);\n  openModal();\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport { API_KEY, API_BASE_URL, API_IMG_URL, NOPOSTER_IMG_URL, refs, watchedIdArr, queueIdArr } from './global';\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies, showMovieInfo } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n// import DataStorage from './data.js';\n\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.title;\n    this.originalTitle = responseData.original_title;\n    this.popularity = responseData.popularity;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWached = this.#getInWached();\n    this.inQueue = this.#getInQueue();\n    this.voteAverage = responseData.vote_average;\n    this.voteCount = responseData.vote_count;\n    this.popularity = responseData.popularity;\n    this.overview = responseData.overview;\n\n    // В API метод getMovie возвращает жанры в свойстве \"genres\", значением которого есть массив объектов\n    // Поэтому, если не удалось получить список жанров - получаем из метода \"genres\"\n    if (!this.genres) {\n      this.genres = [];\n      responseData.genres.map(item => {\n        this.genres.push(item.id);\n      });\n    }\n  }\n\n  // Genres in row\n  genresInRow(maxCount = 0) {\n    return this.#parseGenresByString(maxCount);\n  }\n\n  get wachedOrQueueClass() {\n    return this.inWached ? \"in-watched\" : this.inQueue ? \"in-queue\" : \"\";\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWached() {\n    return !!watchedIdArr.find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!queueIdArr.find(item => item === this.id);\n  }\n\n  #getGenres() {\n  return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    // \n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params) {\n  // depending on params requests API or data\n  if (!params) {\n    API.getTrending()\n      .then(responseData => {        \n        console.log(`Current page: ${responseData.page}, total page: ${responseData.total_pages}`); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        const objectsArray = [];\n\n        movieList.map(movieItem => {          \n          const movie = new Movie(movieItem); // class instance\n          \n          objectsArray.push(movie);\n        })\n        \n        showMovies(objectsArray);\n      })      \n      .catch(result => console.log(result));\n  }\n}\n\nexport function getMovieInfo(id) {\n  if (id) {\n    API.getMovie(id)\n      .then(movieDetails => {\n        const movie = new Movie(movieDetails);\n        showMovieInfo(movie);        \n      });\n    \n    refs.movieModal.classList.remove('is-hidden');\n  }\n}\n\nexport function searchMovies(params, page = 1) {\n  // depending on params searches films in current list\n  if (params) {\n    API.searchMovie(params, page)\n      .then(responseData => {\n        console.log(`Current page: ${responseData.page}, total page: ${responseData.total_pages}`); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {        \n        const objectsArray = [];\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n        \n          objectsArray.push(movie);\n        })\n\n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n  \n}\n\nfunction addQueue(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction addWatched(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction removeQueue(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n\nfunction removeWatched(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n","import { refs } from \"./global\";\nrefs.loader = document.querySelector('.lds-ripple');\nconst DELAY = 500;\n\nexport const showLoader = () => {\n    refs.loader.classList.add('loaded-hiding');\n    console.log(\"loader\");\n}\n\nexport const hideLoader = () => {\n    refs.loader.classList.add('loaded');\n    refs.loader.classList.remove('loaded-hiding');\n}\n\n// window.onload = function () {\n//     showLoader();\n//     window.setTimeout(hideLoader(), DELAY);\n// }\n\n// window.onload = function () {\n//     document.body.classList.add('loaded-hiding');\n//     window.setTimeout(function () {\n//         document.body.classList.add('loaded');\n//         document.body.classList.remove('loaded-hiding');\n//     }, DELAY);\n// }","// module for interface elements and their event listeners\n\nimport { API_KEY, refs } from './global';\nimport { getMovieList, searchMovies, getMovieInfo } from './movies';\nimport { modalInit } from './modal';\nimport { showLoader, hideLoader } from './loader';\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n  // showLoader();\n  // hideLoader();\n\n  modalInit();\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.movie-modal');\n  refs.searchForm = document.querySelector('#movie-search');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    refs.searchForm.addEventListener('submit', onMoviesSearch);\n    refs.cardsBox.addEventListener('click', openMovieModal);\n\n    // refs.movieModal.addEventListener('click', onCloseClick);\n  } catch (error) {\n    console.log(error);\n  }\n\n  getMovieList();\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  onLibraryWatchBtnClick();\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n\nfunction onMoviesSearch(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value;\n  refs.cardsBox.innerHTML = '';\n  searchMovies(query);\n}\n\nfunction openMovieModal(event) {\n  event.preventDefault();\n\n  event.path.map(currentMovieLink => {\n    if (currentMovieLink.nodeName === 'A') {\n      // Open modal\n      // refs.movieModal.classList.remove('is-hidden');\n\n      // // Load movie detail\n      // console.log(currentMovieLink.getAttribute(\"movie-id\"));\n      getMovieInfo(currentMovieLink.getAttribute('movie-id'));\n\n      event.stopPropagation();\n    }\n  });\n}\n","export class DataStorage {\n  constructor() {\n    // singleton pattern\n    if (DataStorage._instance) {\n      return DataStorage._instance;\n    }\n    DataStorage._instance = this;\n    // singleton pattern\n  }\n\n  getWatched() {\n    try {\n      const serializedData = localStorage.getItem('watched');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  getQueue() {\n    try {\n      const serializedData = localStorage.getItem('queue');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  #setWatched(watchedArr) {\n    try {\n      localStorage.setItem('watched', JSON.stringify(watchedArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  #setQueue(queueArr) {\n    try {\n      localStorage.setItem('queue', JSON.stringify(queueArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  addToWatched(id) {\n    const watchedArr = this.getWatched();\n    if (watchedArr.includes(id)) {\n      return;\n    }\n    watchedArr.push(id);\n    this.#setWatched(watchedArr);\n  }\n\n  removeFromWatched(id) {\n    const watchedArr = this.getWatched();\n    const index = watchedArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    watchedArr.splice(index, 1);\n    this.#setWatched(watchedArr);\n  }\n\n  addToQueue(id) {\n    const queueArr = this.getQueue();\n    if (queueArr.includes(id)) {\n      return;\n    }\n    queueArr.push(id);\n    this.#setQueue(queueArr);\n  }\n\n  removeFromQueue(id) {\n    const queueArr = this.getQueue();\n    const index = queueArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    queueArr.splice(index, 1);\n    this.#setQueue(queueArr);\n  }\n}\n","import './sass/main.scss'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\nimport { DataStorage } from './js/data';\nconst data = new DataStorage();\nconst movieTempData = data.getWatched();\nconsole.log(movieTempData);\n\nconst temporaryWatchedList = [299536, 383498, 500664, 466282, 455980, 73021];\nconst temporaryQueueList = [489931, 454283, 421792, 429300, 857, 470918];\n\nfor (let i = 0; i < temporaryWatchedList.length; i += 1) {\n  data.addToWatched(temporaryWatchedList[i]);\n}\nfor (let i = 0; i < temporaryQueueList.length; i += 1) {\n  data.addToQueue(temporaryQueueList[i]);\n}\nconsole.log(data.getWatched());\nconsole.log(data.getQueue());\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$063512fb45095f43$export$21666b427502ea6d","$063512fb45095f43$export$e7f4af1622e7859b","$063512fb45095f43$export$2ba06c8a094dd603","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","$8a7e756c566dd1ea$var$movieModal","document","querySelector","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$onCloseClick","event","target","nodeName","classList","remove","body","$263aef85a4d00bfb$export$ee74f1750741a03b","objectsArray","codeHTML","map","movie","wachedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","cardsBox","innerHTML","$263aef85a4d00bfb$var$printHTMLmarkup","$263aef85a4d00bfb$export$484a3397ac1ebd1","movieObject","HTMLString","voteAverage","voteCount","popularity","overview","$64b03a065230eaf5$exports","JSON","parse","$a7fe6be5afb57be9$var$_fetchQuery","WeakSet","$a7fe6be5afb57be9$var$_loadGenres","$a7fe6be5afb57be9$export$2e2bcd8739ae039","getTrending","pageNum","isDay","pathParams","resource","mediaType","timeWindow","split","this","searchParams","URLSearchParams","api_key","page","$parcel$interopDefault","$a7fe6be5afb57be9$var$fetchQuery","call","searchMovie","query","getMovie","movieId","getGenres","genres","constructor","_instance","searchQuery","$a7fe6be5afb57be9$var$loadGenres","fetch","then","response","ok","Error","status","json","list","result","console","log","$98a09d5e2e3ad76c$var$_parseGenresByString","$98a09d5e2e3ad76c$var$_getInWached","$98a09d5e2e3ad76c$var$_getInQueue","$98a09d5e2e3ad76c$var$_getGenres","$98a09d5e2e3ad76c$var$_getPosterPath","$98a09d5e2e3ad76c$var$Movie","maxCount","$98a09d5e2e3ad76c$var$parseGenresByString","inWached","inQueue","responseData","$98a09d5e2e3ad76c$var$getPosterPath","poster_path","originalTitle","original_title","genre_ids","release_date","substr","$98a09d5e2e3ad76c$var$getInWached","$98a09d5e2e3ad76c$var$getInQueue","vote_average","vote_count","item","push","genreList","$98a09d5e2e3ad76c$var$getGenres","genreNames","i","length","findValue","find","name","join","$98a09d5e2e3ad76c$var$API","$98a09d5e2e3ad76c$export$b0c4d3ac9887d994","params","total_pages","results","movieList","movieItem","catch","loader","$292b382f80842f30$var$onHomeLinkClick","preventDefault","header","$292b382f80842f30$var$onLibraryLinkClick","$292b382f80842f30$var$onLibraryWatchBtnClick","libraryWatchBtn","libraryQueBtn","$292b382f80842f30$var$onLibraryQueBtnClick","$292b382f80842f30$var$openTeamModal","window","addEventListener","$292b382f80842f30$var$checkKeyPress","$292b382f80842f30$var$closeTeamModal","removeEventListener","code","$292b382f80842f30$var$onBackdropClick","currentTarget","$292b382f80842f30$var$onMoviesSearch","elements","$292b382f80842f30$var$openMovieModal","path","currentMovieLink","getAttribute","movieDetails","movieModal","stopPropagation","$deb185f198c84388$var$_setWatched","$deb185f198c84388$var$_setQueue","$deb185f198c84388$export$e95767ffe2e60cec","getWatched","serializedData","localStorage","getItem","err","error","getQueue","addToWatched","watchedArr","includes","$deb185f198c84388$var$setWatched","removeFromWatched","index","indexOf","splice","addToQueue","queueArr","$deb185f198c84388$var$setQueue","removeFromQueue","setItem","stringify","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","searchForm","$1f0dc3b9307be026$var$data","$1f0dc3b9307be026$var$movieTempData","$1f0dc3b9307be026$var$temporaryWatchedList","$1f0dc3b9307be026$var$temporaryQueueList","i1"],"version":3,"file":"index.db81ffa8.js.map"}