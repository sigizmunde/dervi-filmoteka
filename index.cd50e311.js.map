{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","src/js/movies.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\n\nexport function showMovies(objectsArray) {\n  objectsArray.map(movie => {\n    refs.cardsBox.innerHTML += `\n        <li class=\"card ${movie.wachedOrQueueClass}\">\n          <a href=\"\" class=\"card-link\" movie-id=\"${movie.id}\">\n            <div class=\"card-button-slider\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            </div>\n            <div class=\"card-label-wrapper\">\n              <div class=\"card-label-in-watched\"></div>\n              <div class=\"card-label-in-queue\"></div>\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow} | ${movie.releaseDate}</b></p>\n            </div>\n          </a>\n        </li>`;\n  })\n}\n\nexport function showMovieInfo() {}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport { API_KEY, API_BASE_URL, API_IMG_URL, NOPOSTER_IMG_URL, refs, watchedIdArr, queueIdArr } from './global';\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n// import DataStorage from './data.js';\n\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.original_title;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWached = this.#getInWached();\n    this.inQueue = this.#getInQueue();\n  }\n\n  // Genres in row\n  get genresInRow() {\n    return this.#parseGenresByString(2);\n  }\n\n  get wachedOrQueueClass() {\n    return this.inWached ? \"in-watched\" : this.inQueue ? \"in-queue\" : \"\";\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWached() {\n    return !!watchedIdArr.find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!queueIdArr.find(item => item === this.id);\n  }\n\n  #getGenres() {\n  return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    // \n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params) {\n  // depending on params requests API or data\n  if (!params) {\n    API.getTrending()\n      .then(responseData => {        \n        console.log(`Current page: ${responseData.page}, total page: ${responseData.total_pages}`); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        objectsArray = [];\n\n        movieList.map(movieItem => {          \n          const movie = new Movie(movieItem); // class instance\n          \n          objectsArray.push(movie);\n        })\n        \n        showMovies(objectsArray);\n\n        // Получаем все селекторы с классом \".card-link\", это ссылки, для открытия деталей фильма\n        refs.cardLinks = document.querySelectorAll('.card-link');\n\n        // console.log(refs.cardLinks); // ВРЕМЕННО\n\n        // Перебираем все селекторы и для каждого навязываем событие 'click'\n        refs.cardLinks.forEach(cardLink => {\n          // console.log(cardLink); // ВРЕМЕННО\n          cardLink.addEventListener('click', () => {\n            event.preventDefault();\n            console.log(cardLink); // ВРЕМЕННО\n\n            // Открываем модальное окно (убираем класс \"is-hidden\")\n            // cardLink.toggleAttribute(\".is-hidden\");\n              \n            });\n          });\n\n      })      \n      .catch(result => console.log(result));\n  }\n}\n\nfunction getMovieInfo(id) {\n  return fetchMovie(id);\n}\n\nexport function searchMovies(params) {\n  // depending on params searches films in current list\n  if (params) {\n    API.searchMovie(params)\n      .then(responseData => {\n        console.log(`Current page: ${responseData.page}, total page: ${responseData.total_pages}`); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {        \n        objectsArray = [];\n\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n          \n          objectsArray.push(movie);\n        })\n        \n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n  \n}\n\nfunction addQueue(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction addWatched(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction removeQueue(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n\nfunction removeWatched(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n","// module for interface elements and their event listeners\n\nimport { API_KEY, refs } from './global';\nimport { getMovieList, searchMovies } from './movies';\nimport { openModal } from './modal';\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.modal');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    // refs.movieModal.addEventListener('click', onCloseClick);\n  } catch (error) {\n    console.log(error);\n  }\n\n  getMovieList();\n  // searchMovies();\n\n  // before getMovieList()\n  // refs.cardLinks = document.querySelectorAll('.card-link');\n\n  // console.log(refs.cardLinks)\n\n  // refs.cardLinks.forEach(cardLink => {\n  //   console.log(cardLink);\n  //   cardLink.addEventListener('click', () => {\n  //     event.preventDefault();\n  //     console.log(refs.cardLink)\n  //   });\n  // });\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  onLibraryWatchBtnClick();\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n","import './sass/main.scss'; // draft file\n// import './js/draft'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\n\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$063512fb45095f43$export$21666b427502ea6d","$063512fb45095f43$export$e7f4af1622e7859b","$063512fb45095f43$export$2ba06c8a094dd603","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","document","querySelector","$263aef85a4d00bfb$export$ee74f1750741a03b","objectsArray","map","movie","cardsBox","innerHTML","wachedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","$64b03a065230eaf5$exports","JSON","parse","$a7fe6be5afb57be9$var$_fetchQuery","WeakSet","$a7fe6be5afb57be9$var$_loadGenres","$a7fe6be5afb57be9$export$2e2bcd8739ae039","getTrending","pageNum","isDay","pathParams","resource","mediaType","timeWindow","split","this","searchParams","URLSearchParams","api_key","page","$parcel$interopDefault","$a7fe6be5afb57be9$var$fetchQuery","call","searchMovie","query","getMovie","movieId","getGenres","genres","constructor","_instance","searchQuery","$a7fe6be5afb57be9$var$loadGenres","fetch","then","response","ok","Error","status","json","list","result","console","log","$98a09d5e2e3ad76c$var$_parseGenresByString","$98a09d5e2e3ad76c$var$_getInWached","$98a09d5e2e3ad76c$var$_getInQueue","$98a09d5e2e3ad76c$var$_getGenres","$98a09d5e2e3ad76c$var$_getPosterPath","$98a09d5e2e3ad76c$var$Movie","$98a09d5e2e3ad76c$var$parseGenresByString","inWached","inQueue","responseData","$98a09d5e2e3ad76c$var$getPosterPath","poster_path","original_title","genre_ids","release_date","substr","$98a09d5e2e3ad76c$var$getInWached","$98a09d5e2e3ad76c$var$getInQueue","maxCount","genreList","$98a09d5e2e3ad76c$var$getGenres","genreNames","i","length","push","findValue","find","item","name","join","$98a09d5e2e3ad76c$var$API","$292b382f80842f30$var$onHomeLinkClick","event","preventDefault","header","classList","remove","$292b382f80842f30$var$onLibraryLinkClick","$292b382f80842f30$var$onLibraryWatchBtnClick","libraryWatchBtn","libraryQueBtn","$292b382f80842f30$var$onLibraryQueBtnClick","$292b382f80842f30$var$openTeamModal","window","addEventListener","$292b382f80842f30$var$checkKeyPress","body","$292b382f80842f30$var$closeTeamModal","removeEventListener","code","$292b382f80842f30$var$onBackdropClick","currentTarget","target","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","movieModal","error","params","total_pages","results","movieList","movieItem","cardLinks","querySelectorAll","forEach","cardLink","catch"],"version":3,"file":"index.cd50e311.js.map"}