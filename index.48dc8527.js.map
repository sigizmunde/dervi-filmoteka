{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","<<jsx-config-pragma.js>>","src/js/movies.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\n\nexport function showMovies(movie) {\n  refs.cardsBox.innerHTML += `\n        <li class=\"card ${movie.wachedOrQueueClass}\">\n          <a href=\"\" class=\"card-link\" movie-id=\"${movie.id}\">\n            <div class=\"card-button-slider\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            </div>\n            <div class=\"card-label-wrapper\">\n              <div class=\"card-label-in-watched\"></div>\n              <div class=\"card-label-in-queue\"></div>\n            </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow} | ${movie.releaseDate}</b></p>\n            </div>\n          </a>\n        </li>`;\n}\n\nexport function showMovieInfo() {}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n",null,"/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport { API_KEY, API_BASE_URL, API_IMG_URL, NOPOSTER_IMG_URL, refs, watchedIdArr, queueIdArr } from './global';\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n// import DataStorage from './data.js';\n\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.original_title;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWached = this.#getInWached();\n    this.inQueue = this.#getInQueue();\n  }\n\n  // Genres in row\n  get genresInRow() {\n    return this.#parseGenresByString(2);\n  }\n\n  get wachedOrQueueClass() {\n    return this.inWached ? \"in-watched\" : this.inQueue ? \"in-queue\" : \"\";\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWached() {\n    return !!watchedIdArr.find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!queueIdArr.find(item => item === this.id);\n  }\n\n  #getGenres() {\n  return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    // \n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params) {\n  // depending on params requests API or data\n  if (!params) {\n    API.getTrending()\n      .then(responseData => {        \n        console.log(`Current page: ${responseData.page}, total page: ${responseData.total_pages}`); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        movieList.map(movieItem => {          \n          const movie = new Movie(movieItem); // class instance          \n          showMovies(movie);\n        })\n        \n        // Получаем все селекторы с классом \".card-link\", это ссылки, для открытия деталей фильма\n        refs.cardLinks = document.querySelectorAll('.card-link');\n\n        // console.log(refs.cardLinks); // ВРЕМЕННО\n\n        // Перебираем все селекторы и для каждого навязываем событие 'click'\n        refs.cardLinks.forEach(cardLink => {\n          // console.log(cardLink); // ВРЕМЕННО\n          cardLink.addEventListener('click', () => {\n            event.preventDefault();\n            console.log(cardLink); // ВРЕМЕННО\n\n            // Открываем модальное окно (убираем класс \"is-hidden\")\n            // cardLink.toggleAttribute(\".is-hidden\");\n              \n            });\n          });\n\n      })      \n      .catch(result => console.log(result));\n  }\n}\n\nfunction getMovieInfo(id) {\n  return fetchMovie(id);\n}\n\nfunction search(params) {\n  // depending on params searches films in current list\n\n  return fetchMovies();\n}\n\nfunction addQueue(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction addWatched(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction removeQueue(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n\nfunction removeWatched(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n","// module for interface elements and their event listeners\n\nimport { API_KEY, refs } from './global';\nimport { getMovieList } from './movies';\nimport { openModal } from './modal';\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.modal');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    // refs.movieModal.addEventListener('click', onCloseClick);\n  } catch (error) {\n    console.log(error);\n  }\n\n  getMovieList();\n\n  // before getMovieList()\n  // refs.cardLinks = document.querySelectorAll('.card-link');\n\n  // console.log(refs.cardLinks)\n\n  // refs.cardLinks.forEach(cardLink => {\n  //   console.log(cardLink);\n  //   cardLink.addEventListener('click', () => {\n  //     event.preventDefault();\n  //     console.log(refs.cardLink)\n  //   });\n  // });\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  onLibraryWatchBtnClick();\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n","import './sass/main.scss'; // draft file\n// import './js/draft'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\n\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$4c5b307740f9440c$export$a9861bd62f48e142","$4c5b307740f9440c$export$21666b427502ea6d","$4c5b307740f9440c$export$e7f4af1622e7859b","$4c5b307740f9440c$export$2ba06c8a094dd603","$665014edacbfe17b$exports","instance","Constructor","$82ce8d6f4ce6ea51$exports","receiver","privateSet","fn","$b5362597a15e80da$exports","$b5362597a15e80da$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","document","querySelector","$1457a8b41868a85b$export$ee74f1750741a03b","movie","cardsBox","innerHTML","concat","wachedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","$45eb949e2189fca4$exports","JSON","parse","$90f63e501fde6f2e$var$_fetchQuery","WeakSet","$90f63e501fde6f2e$var$_loadGenres","$90f63e501fde6f2e$export$2e2bcd8739ae039","APIService","$parcel$interopDefault","this","_instance","searchQuery","genres","$90f63e501fde6f2e$var$loadGenres","call","pageNum","arguments","isDay","pathParams","resource","mediaType","timeWindow","split","searchParams","URLSearchParams","api_key","page","$90f63e501fde6f2e$var$fetchQuery","query","movieId","fetch","then","response","ok","Error","status","json","list","result","_this","console","log","$3336333d54cdc52e$var$_parseGenresByString","$3336333d54cdc52e$var$_getInWached","$3336333d54cdc52e$var$_getInQueue","$3336333d54cdc52e$var$_getGenres","$3336333d54cdc52e$var$_getPosterPath","$3336333d54cdc52e$var$Movie","Movie","responseData","$3336333d54cdc52e$var$getPosterPath","poster_path","original_title","genre_ids","release_date","substr","inWached","$3336333d54cdc52e$var$getInWached","inQueue","$3336333d54cdc52e$var$getInQueue","$3336333d54cdc52e$var$parseGenresByString","maxCount","genreNames","push","findValue","genreList","find","item","_this1","name","$3336333d54cdc52e$var$getGenres","i1","join","$3336333d54cdc52e$var$API","getGenres","$3336333d54cdc52e$export$a7ba856b7be83d1e","params","getTrending","total_pages","results","movieList","map","movieItem","cardLinks","querySelectorAll","forEach","cardLink","addEventListener","event","preventDefault","catch","$cdc8bba1cf7e6fe0$var$onHomeLinkClick","header","classList","remove","$cdc8bba1cf7e6fe0$var$onLibraryLinkClick","$cdc8bba1cf7e6fe0$var$onLibraryWatchBtnClick","libraryWatchBtn","libraryQueBtn","$cdc8bba1cf7e6fe0$var$onLibraryQueBtnClick","$cdc8bba1cf7e6fe0$var$openTeamModal","window","$cdc8bba1cf7e6fe0$var$checkKeyPress","body","$cdc8bba1cf7e6fe0$var$closeTeamModal","removeEventListener","code","$cdc8bba1cf7e6fe0$var$onBackdropClick","currentTarget","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","movieModal","error"],"version":3,"file":"index.48dc8527.js.map"}