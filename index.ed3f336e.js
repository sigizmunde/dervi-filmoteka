function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},r={},n={},i=t.parcelRequire7d90;null==i&&((i=function(e){if(e in r)return r[e].exports;if(e in n){var t=n[e];delete n[e];var i={id:e,exports:{}};return r[e]=i,t.call(i.exports,i,i.exports),i.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){n[e]=t},t.parcelRequire7d90=i),i.register("7K24o",(function(e,t){Object.defineProperty(e.exports,"__esModule",{value:!0}),e.exports.default=function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}}));const s={cardsBox:document.querySelector(".cards-box")};function a(e){e.results.map((e=>{s.cardsBox.innerHTML+=`\n          <li class="card">\n            <a href="" class="card-link" movie-id="${e.id}">\n              <img\n                src="http://image.tmdb.org/t/p/w500${e.poster_path}"\n                class="card-image"\n                alt=""\n              />\n              <div class="card-body">\n                <p class="card-title"><b>${e.original_title}</b></p>\n                <p class="card-genres"><b>${w(e.genre_ids,2)} | ${e.release_date.substr(0,4)}</b></p>\n              </div>\n            </a>\n          </li>`}))}var o={};Object.defineProperty(o,"__esModule",{value:!0}),o.default=function(e,t,r){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return r};var d={};Object.defineProperty(d,"__esModule",{value:!0}),d.default=function(e,t){l.default(e,t),t.add(e)};var c,l=(c=i("7K24o"))&&c.__esModule?c:{default:c};var u=new WeakSet,h=new WeakSet;class p{getTrending(t=1,r=!1){const n={resource:"trending",mediaType:"movie",timeWindow:r?"day":"week",get split(){return`${this.resource}/${this.mediaType}/${this.timeWindow}`}},i=new URLSearchParams({api_key:"ed9b8dd4dcf22d9d746c4e21c6321e97",page:t});return e(o)(this,u,f).call(this,n.split,i)}searchMovie(t,r=1){const n={resource:"search",mediaType:"movie",get split(){return`${this.resource}/${this.mediaType}`}},i=new URLSearchParams({api_key:"ed9b8dd4dcf22d9d746c4e21c6321e97",page:r,query:t});return e(o)(this,u,f).call(this,n.split,i)}getMovie(t){const r={resource:"movie",id:t,get split(){return`${this.resource}/${this.id}`}},n=new URLSearchParams({api_key:"ed9b8dd4dcf22d9d746c4e21c6321e97"});return e(o)(this,u,f).call(this,r.split,n)}getGenres(){return this.genres}constructor(){if(e(d)(this,u),e(d)(this,h),p._instance)return p._instance;p._instance=this,this.searchQuery="",this.genres=[],e(o)(this,h,g).call(this)}}function f(e,t){return fetch(`https://api.themoviedb.org/3/${e}?${t}`).then((e=>{if(!e.ok)throw new Error(e.status);return e.json()}))}function g(){const t={resource:"genre",mediaType:"movie",list:"list",get split(){return`${this.resource}/${this.mediaType}/${this.list}`}},r=new URLSearchParams({api_key:"ed9b8dd4dcf22d9d746c4e21c6321e97"});e(o)(this,u,f).call(this,t.split,r).then((e=>this.genres=e.genres))}const m=new p;function w(e=[],t=0){const r=m.getGenres(),n=[];for(let i=0;i<e.length;i++){if(t&&i===t){n.push("others");break}findValue=r.find((t=>t.id===e[i])),findValue&&n.push(findValue.name)}return n.join(", ")}m.getTrending().then((e=>{a(e)})).catch((e=>console.log(e)));
//# sourceMappingURL=index.ed3f336e.js.map
