{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/modal.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","src/js/data.js","src/js/movies.js","src/js/loader.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// draft file\nconst movieModal = document.querySelector('.movie-modal');\nconst backdrop = document.querySelector('.backdrop');\n\nexport function modalInit() {\n  movieModal.addEventListener('click', onCloseClick);\n  backdrop.addEventListener('click', onCloseClick);\n}\n\nexport function openModal() {\n  movieModal.classList.remove('is-hidden');\n  movieModal.classList.add('open');\n  document.body.classList.add('modal-open');\n}\n\nexport function closeModal() {\n  movieModal.classList.remove('open');\n  movieModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n}\n\nfunction onCloseClick(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    return;\n  }\n  closeModal();\n}\n\nexport function printToModal(HTMLString) {\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.innerHTML = HTMLString;\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\nimport { openModal, printToModal } from './modal';\n\nexport function showMovies(objectsArray) {\n  codeHTML = '';\n  objectsArray.map(movie => {\n    codeHTML += `\n        <li class=\"card ${movie.watchedOrQueueClass}\">\n          <a href=\"\" class=\"card-link card-button-slider\" movie-id=\"${\n            movie.id\n          }\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            \n              </a>\n              <div class=\"card-label-wrapper\">\n                <div class=\"card-label-in-watched\"></div>\n                <div class=\"card-label-in-queue\"></div>\n              </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow(3)} | ${\n      movie.releaseDate\n    }</b></p>\n        </li>`;\n  });\n\n  printHTMLmarkup(codeHTML);\n}\n\n// Show elements on page\nfunction printHTMLmarkup(codeHTML) {\n  refs.cardsBox.innerHTML += codeHTML;\n}\n\nexport function showMovieInfo(movieObject) {\n  codeHTML = `\n      <div class=\"movie-picture-box\">\n        <img\n          src=\"${movieObject.posterPath}\"\n          alt=\"movie-picture\"\n          class=\"movie-picture\"\n        />\n      </div>\n      <div class=\"info-container\">\n        <h1 class=\"movie-title\">${movieObject.title}</h1>\n        <ul class=\"movie-list\">\n          <li class=\"movie-items item-right\">\n            <div class=\"description-box\">\n              <p class=\"movie-description\">Vote / Votes</p>\n              <p class=\"movie-description\">Popularity</p>\n              <p class=\"movie-description\">Original Title</p>\n              <p class=\"movie-description\">Genre</p>\n            </div>\n          </li>\n          <li class=\"movie-items\">\n            <div class=\"property-box\">\n              <div class=\"vote-box property\">\n                <p class=\"property-vote property-accent\" id=\"vote\">${\n                  movieObject.voteAverage\n                }</p>\n                <span class=\"vote-slash\">/</span>\n                <p class=\"property-vote property-vote-alt\" id=\"votes\">${\n                  movieObject.voteCount\n                }</p>\n              </div>\n              <p class=\"property\" id=\"popularity\">${movieObject.popularity}</p>\n              <p class=\"property\" id=\"title\">${movieObject.title}</p>\n              <p class=\"property\" id=\"genre\">${movieObject.genresInRow()}</p>\n            </div>\n          </li>\n        </ul>\n        <article class=\"article\">\n          <p class=\"article-caption\">About</p>\n          <p class=\"article-text\">\n            ${movieObject.overview}\n          </p>\n        </article>\n        <div class=\"button-box\">\n          <button class=\"movie-button primary-btn\">add to Watched</button>\n          <button class=\"movie-button\">add to queue</button>\n        </div>\n      </div>`;\n\n  printToModal(codeHTML);\n  openModal();\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n","export class DataStorage {\n  constructor() {\n    // singleton pattern\n    if (DataStorage._instance) {\n      return DataStorage._instance;\n    }\n    DataStorage._instance = this;\n    // singleton pattern\n  }\n\n  getWatched() {\n    try {\n      const serializedData = localStorage.getItem('watched');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  getQueue() {\n    try {\n      const serializedData = localStorage.getItem('queue');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  #setWatched(watchedArr) {\n    try {\n      localStorage.setItem('watched', JSON.stringify(watchedArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  #setQueue(queueArr) {\n    try {\n      localStorage.setItem('queue', JSON.stringify(queueArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  addToWatched(id) {\n    const watchedArr = this.getWatched();\n    if (watchedArr.includes(id)) {\n      return;\n    }\n    watchedArr.push(id);\n    this.#setWatched(watchedArr);\n  }\n\n  removeFromWatched(id) {\n    const watchedArr = this.getWatched();\n    const index = watchedArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    watchedArr.splice(index, 1);\n    this.#setWatched(watchedArr);\n  }\n\n  addToQueue(id) {\n    const queueArr = this.getQueue();\n    if (queueArr.includes(id)) {\n      return;\n    }\n    queueArr.push(id);\n    this.#setQueue(queueArr);\n  }\n\n  removeFromQueue(id) {\n    const queueArr = this.getQueue();\n    const index = queueArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    queueArr.splice(index, 1);\n    this.#setQueue(queueArr);\n  }\n}\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_IMG_URL,\n  NOPOSTER_IMG_URL,\n  refs,\n  watchedIdArr,\n  queueIdArr,\n} from './global';\n\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies, showMovieInfo } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\nimport { DataStorage } from './data.js';\nimport { watchedMovieData, queueMovieData } from '../index';\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.title;\n    this.originalTitle = responseData.original_title;\n    this.popularity = responseData.popularity;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWatched = this.#getInWatched();\n    this.inQueue = this.#getInQueue();\n    this.voteAverage = responseData.vote_average;\n    this.voteCount = responseData.vote_count;\n    this.popularity = responseData.popularity;\n    this.overview = responseData.overview;\n\n    // В API метод getMovie возвращает жанры в свойстве \"genres\", значением которого есть массив объектов\n    // Поэтому, если не удалось получить список жанров - получаем из метода \"genres\"\n    if (!this.genres) {\n      this.genres = [];\n      responseData.genres.map(item => {\n        this.genres.push(item.id);\n      });\n    }\n  }\n\n  // Genres in row\n  genresInRow(maxCount = 0) {\n    return this.#parseGenresByString(maxCount);\n  }\n\n  get watchedOrQueueClass() {\n    return this.inWatched ? 'in-watched' : this.inQueue ? 'in-queue' : '';\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWatched() {\n    return !!watchedMovieData.find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!queueMovieData.find(item => item === this.id);\n  }\n\n  #getGenres() {\n    return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    //\n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params) {\n  // depending on params requests API or data\n  if (!params) {\n    API.getTrending()\n      .then(responseData => {\n        console.log(\n          `Current page: ${responseData.page}, total page: ${responseData.total_pages}`\n        ); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        const objectsArray = [];\n\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n\n          objectsArray.push(movie);\n        });\n\n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n}\n\nexport function getAndShowLibrary(localDataArray) {\n  let promisesMovies = [];\n  localDataArray.map(movieId => {\n    promisesMovies.push(\n      API.getMovie(movieId).then(response => {\n        response.genres = response.genres.map(item => {\n          return item.id;\n        });\n        const libMovie = new Movie(response);\n        return libMovie;\n      })\n    );\n    Promise.all(promisesMovies)\n      .then(response => {\n        showMovies(response);\n      })\n      .catch(result => console.log(result));\n  });\n}\n\nexport function getMovieInfo(id) {\n  if (id) {\n    API.getMovie(id).then(movieDetails => {\n      const movie = new Movie(movieDetails);\n      showMovieInfo(movie);\n    });\n\n    refs.movieModal.classList.remove('is-hidden');\n  }\n}\n\nexport function searchMovies(params, page = 1) {\n  // depending on params searches films in current list\n  if (params) {\n    API.searchMovie(params, page)\n      .then(responseData => {\n        console.log(\n          `Current page: ${responseData.page}, total page: ${responseData.total_pages}`\n        ); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        const objectsArray = [];\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n\n          objectsArray.push(movie);\n        });\n\n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n}\n\nfunction addQueue(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction addWatched(film) {\n  // gets dataStorage.getQueue, adds film.id and then sets dataStorage.setQueue\n}\n\nfunction removeQueue(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n\nfunction removeWatched(film) {\n  // gets dataStorage.getQueue, removes film.id and then sets dataStorage.setQueue\n}\n","import { refs } from \"./global\";\nrefs.loader = document.querySelector('.lds-ripple');\nconst DELAY = 500;\n\nexport const showLoader = () => {\n    refs.loader.classList.add('loaded-hiding');\n    console.log(\"loader\");\n}\n\nexport const hideLoader = () => {\n    refs.loader.classList.add('loaded');\n    refs.loader.classList.remove('loaded-hiding');\n}\n\n// window.onload = function () {\n//     showLoader();\n//     window.setTimeout(hideLoader(), DELAY);\n// }\n\n// window.onload = function () {\n//     document.body.classList.add('loaded-hiding');\n//     window.setTimeout(function () {\n//         document.body.classList.add('loaded');\n//         document.body.classList.remove('loaded-hiding');\n//     }, DELAY);\n// }","// module for interface elements and their event listeners\n\nimport { API_KEY, refs, watchedIdArr, queueIdArr } from './global';\nimport {\n  getMovieList,\n  searchMovies,\n  getMovieInfo,\n  getAndShowLibrary,\n} from './movies';\nimport { modalInit } from './modal';\nimport { showLoader, hideLoader } from './loader';\nimport { DataStorage } from './data';\nconst data = new DataStorage();\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n  // showLoader();\n  // hideLoader();\n\n  modalInit();\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.movie-modal');\n  refs.searchForm = document.querySelector('#movie-search');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    refs.searchForm.addEventListener('submit', onMoviesSearch);\n    refs.cardsBox.addEventListener('click', openMovieModal);\n\n    // refs.movieModal.addEventListener('click', onCloseClick);\n  } catch (error) {\n    console.log(error);\n  }\n\n  getMovieList();\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  onLibraryWatchBtnClick();\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  getAndShowLibrary(data.getWatched());\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  getAndShowLibrary(data.getQueue());\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n\nfunction onMoviesSearch(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value;\n  refs.cardsBox.innerHTML = '';\n  searchMovies(query);\n}\n\nfunction openMovieModal(event) {\n  event.preventDefault();\n\n  event.path.map(currentMovieLink => {\n    if (currentMovieLink.nodeName === 'A') {\n      // Open modal\n      // refs.movieModal.classList.remove('is-hidden');\n\n      // // Load movie detail\n      // console.log(currentMovieLink.getAttribute(\"movie-id\"));\n      getMovieInfo(currentMovieLink.getAttribute('movie-id'));\n\n      event.stopPropagation();\n    }\n  });\n}\n","import './sass/main.scss'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\nimport { DataStorage } from './js/data';\nconst data = new DataStorage();\nexport const watchedMovieData = data.getWatched();\nexport const queueMovieData = data.getQueue();\n// console.log(watchedMovieData);\n// console.log(queueMovieData);\n\nconst temporaryWatchedList = [\n  299536, 383498, 500664, 466282, 455980, 62286, 338953,\n];\nconst temporaryQueueList = [489931, 454283, 421792, 429300, 857, 470918];\n\nfor (let i = 0; i < temporaryWatchedList.length; i += 1) {\n  data.addToWatched(temporaryWatchedList[i]);\n}\nfor (let i = 0; i < temporaryQueueList.length; i += 1) {\n  data.addToQueue(temporaryQueueList[i]);\n}\n// console.log(data.getWatched());\n// console.log(data.getQueue());\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$063512fb45095f43$export$21666b427502ea6d","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","$8a7e756c566dd1ea$var$movieModal","document","querySelector","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$onCloseClick","event","target","nodeName","classList","remove","body","$263aef85a4d00bfb$export$ee74f1750741a03b","objectsArray","codeHTML","map","movie","watchedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","cardsBox","innerHTML","$263aef85a4d00bfb$var$printHTMLmarkup","$263aef85a4d00bfb$export$484a3397ac1ebd1","movieObject","HTMLString","voteAverage","voteCount","popularity","overview","$64b03a065230eaf5$exports","JSON","parse","$a7fe6be5afb57be9$var$_fetchQuery","WeakSet","$a7fe6be5afb57be9$var$_loadGenres","$a7fe6be5afb57be9$export$2e2bcd8739ae039","getTrending","pageNum","isDay","pathParams","resource","mediaType","timeWindow","split","this","searchParams","URLSearchParams","api_key","page","$parcel$interopDefault","$a7fe6be5afb57be9$var$fetchQuery","call","searchMovie","query","getMovie","movieId","getGenres","genres","constructor","_instance","searchQuery","$a7fe6be5afb57be9$var$loadGenres","fetch","then","response","ok","Error","status","json","list","result","console","log","$deb185f198c84388$var$_setWatched","$deb185f198c84388$var$_setQueue","$deb185f198c84388$export$e95767ffe2e60cec","getWatched","serializedData","localStorage","getItem","err","error","getQueue","addToWatched","watchedArr","includes","push","$deb185f198c84388$var$setWatched","removeFromWatched","index","indexOf","splice","addToQueue","queueArr","$deb185f198c84388$var$setQueue","removeFromQueue","setItem","stringify","$98a09d5e2e3ad76c$var$_parseGenresByString","$98a09d5e2e3ad76c$var$_getInWatched","$98a09d5e2e3ad76c$var$_getInQueue","$98a09d5e2e3ad76c$var$_getGenres","$98a09d5e2e3ad76c$var$_getPosterPath","$98a09d5e2e3ad76c$var$Movie","maxCount","$98a09d5e2e3ad76c$var$parseGenresByString","inWatched","inQueue","responseData","$98a09d5e2e3ad76c$var$getPosterPath","poster_path","originalTitle","original_title","genre_ids","release_date","substr","$98a09d5e2e3ad76c$var$getInWatched","$98a09d5e2e3ad76c$var$getInQueue","vote_average","vote_count","item","genreList","$98a09d5e2e3ad76c$var$getGenres","genreNames","i","length","findValue","find","name","join","$1f0dc3b9307be026$export$b9fcb0efdeb2a333","$1f0dc3b9307be026$export$1a2b70d5663ea733","$98a09d5e2e3ad76c$var$API","$98a09d5e2e3ad76c$export$d41fb6dd6e813260","localDataArray","promisesMovies","Promise","all","catch","$98a09d5e2e3ad76c$export$b0c4d3ac9887d994","params","total_pages","results","movieList","movieItem","loader","$292b382f80842f30$var$data","$292b382f80842f30$var$onHomeLinkClick","preventDefault","header","$292b382f80842f30$var$onLibraryLinkClick","$292b382f80842f30$var$onLibraryWatchBtnClick","libraryWatchBtn","libraryQueBtn","$292b382f80842f30$var$onLibraryQueBtnClick","$292b382f80842f30$var$openTeamModal","window","addEventListener","$292b382f80842f30$var$checkKeyPress","$292b382f80842f30$var$closeTeamModal","removeEventListener","code","$292b382f80842f30$var$onBackdropClick","currentTarget","$292b382f80842f30$var$onMoviesSearch","elements","$292b382f80842f30$var$openMovieModal","path","currentMovieLink","getAttribute","movieDetails","movieModal","stopPropagation","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","searchForm","$1f0dc3b9307be026$var$data","$1f0dc3b9307be026$var$temporaryWatchedList","$1f0dc3b9307be026$var$temporaryQueueList","i1"],"version":3,"file":"index.b35b6441.js.map"}