{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_check_private_redeclaration.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/modal.js","src/js/markup.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","src/js/data.js","src/js/movies.js","src/js/loader.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = './images/noposter.jpg';\n\nexport const refs = {};\nexport let watchedIdArr = [];\nexport let queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// draft file\nconst movieModal = document.querySelector('.movie-modal');\nconst backdrop = document.querySelector('.backdrop');\n\nexport function modalInit() {\n  movieModal.addEventListener('click', onCloseClick);\n  backdrop.addEventListener('click', onCloseClick);\n}\n\nexport function openModal() {\n  movieModal.classList.remove('is-hidden');\n  movieModal.classList.add('open');\n  document.body.classList.add('modal-open');\n}\n\nexport function closeModal() {\n  movieModal.classList.remove('open');\n  movieModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n}\n\nfunction onCloseClick(event) {\n  if (event.target.nodeName === 'BUTTON') {\n    return;\n  }\n  closeModal();\n}\n\nexport function printToModal(HTMLString) {\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.innerHTML = HTMLString;\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { parseGenresByString } from './movies';\nimport { openModal, printToModal } from './modal';\n\nexport function clearMovies() {\n  refs.cardsBox.innerHTML = '';\n}\n\nexport function showMovies(objectsArray) {\n  let codeHTML = '';\n  objectsArray.map(movie => {\n    codeHTML += `\n        <li class=\"card ${movie.watchedOrQueueClass}\">\n          <a href=\"\" class=\"card-link card-button-slider\" data-id=\"${\n            movie.id\n          }\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            \n              </a>\n              <div class=\"card-label-wrapper\">\n                <div class=\"card-label-in-watched\"></div>\n                <div class=\"card-label-in-queue\"></div>\n              </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${movie.genresInRow(3)} | ${\n      movie.releaseDate\n    }</b></p>\n        </li>`;\n  });\n\n  printHTMLmarkup(codeHTML);\n}\n\n// Show elements on page\nfunction printHTMLmarkup(codeHTML) {\n  refs.cardsBox.innerHTML += codeHTML;\n}\n\nexport function showMovieInfo(movieObject) {\n  let codeHTML = `\n      <div class=\"movie-picture-box\">\n        <img\n          src=\"${movieObject.posterPath}\"\n          alt=\"movie-picture\"\n          class=\"movie-picture\"\n        />\n      </div>\n      <div class=\"info-container\">\n        <h1 class=\"movie-title\">${movieObject.title}</h1>\n        <ul class=\"movie-list\">\n          <li class=\"movie-items item-right\">\n            <div class=\"description-box\">\n              <p class=\"movie-description\">Vote / Votes</p>\n              <p class=\"movie-description\">Popularity</p>\n              <p class=\"movie-description\">Original Title</p>\n              <p class=\"movie-description\">Genre</p>\n            </div>\n          </li>\n          <li class=\"movie-items\">\n            <div class=\"property-box\">\n              <div class=\"vote-box property\">\n                <p class=\"property-vote property-accent\" id=\"vote\">${\n                  movieObject.voteAverage\n                }</p>\n                <span class=\"vote-slash\">/</span>\n                <p class=\"property-vote property-vote-alt\" id=\"votes\">${\n                  movieObject.voteCount\n                }</p>\n              </div>\n              <p class=\"property\" id=\"popularity\">${movieObject.popularity}</p>\n              <p class=\"property\" id=\"title\">${movieObject.title}</p>\n              <p class=\"property\" id=\"genre\">${movieObject.genresInRow()}</p>\n            </div>\n          </li>\n        </ul>\n        <article class=\"article\">\n          <p class=\"article-caption\">About</p>\n          <p class=\"article-text\">\n            ${movieObject.overview}\n          </p>\n        </article>\n        <div class=\"button-box\">\n          <button class=\"movie-button primary-btn\">add to Watched</button>\n          <button class=\"movie-button\">add to queue</button>\n        </div>\n      </div>`;\n\n  printToModal(codeHTML);\n  openModal();\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {\n    return this.genres;\n  }\n}\n","export class DataStorage {\n  constructor() {\n    // singleton pattern\n    if (DataStorage._instance) {\n      return DataStorage._instance;\n    }\n    DataStorage._instance = this;\n    // singleton pattern\n  }\n\n  getWatched() {\n    try {\n      const serializedData = localStorage.getItem('watched');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  getQueue() {\n    try {\n      const serializedData = localStorage.getItem('queue');\n      return serializedData === null ? [] : JSON.parse(serializedData);\n    } catch (err) {\n      console.error('Get state error: ', err);\n    }\n    return [];\n  }\n\n  #setWatched(watchedArr) {\n    try {\n      localStorage.setItem('watched', JSON.stringify(watchedArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  #setQueue(queueArr) {\n    try {\n      localStorage.setItem('queue', JSON.stringify(queueArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  addToWatched(id) {\n    const watchedArr = this.getWatched();\n    if (watchedArr.includes(id)) {\n      return;\n    }\n    watchedArr.push(id);\n    this.#setWatched(watchedArr);\n  }\n\n  removeFromWatched(id) {\n    const watchedArr = this.getWatched();\n    const index = watchedArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    watchedArr.splice(index, 1);\n    this.#setWatched(watchedArr);\n  }\n\n  addToQueue(id) {\n    const queueArr = this.getQueue();\n    if (queueArr.includes(id)) {\n      return;\n    }\n    queueArr.push(id);\n    this.#setQueue(queueArr);\n  }\n\n  removeFromQueue(id) {\n    const queueArr = this.getQueue();\n    const index = queueArr.indexOf(id);\n    if (index < 0) {\n      return;\n    }\n    queueArr.splice(index, 1);\n    this.#setQueue(queueArr);\n  }\n}\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_IMG_URL,\n  NOPOSTER_IMG_URL,\n  refs,\n  watchedIdArr,\n  queueIdArr,\n} from './global';\n\n// import { fetchMovie, fetchMovies, getGenres } from 'movie-api';\nimport { showMovies, showMovieInfo } from './markup';\nimport APIService from './movie-api';\nimport * as initialGenres from './dummy-array-objs/genres.json';\nimport { DataStorage } from './data.js';\nconst dataStorage = new DataStorage();\n\nclass Movie {\n  constructor(responseData) {\n    // console.log(responseData);\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.title;\n    this.originalTitle = responseData.original_title;\n    this.popularity = responseData.popularity;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date.substr(0, 4);\n    this.inWatched = this.#getInWatched();\n    this.inQueue = this.#getInQueue();\n    this.voteAverage = responseData.vote_average;\n    this.voteCount = responseData.vote_count;\n    this.popularity = responseData.popularity;\n    this.overview = responseData.overview;\n\n    // В API метод getMovie возвращает жанры в свойстве \"genres\", значением которого есть массив объектов\n    // Поэтому, если не удалось получить список жанров - получаем из метода \"genres\"\n    if (!this.genres) {\n      this.genres = [];\n      responseData.genres.map(item => {\n        this.genres.push(item.id);\n      });\n    }\n  }\n\n  // Genres in row\n  genresInRow(maxCount = 0) {\n    return this.#parseGenresByString(maxCount);\n  }\n\n  get watchedOrQueueClass() {\n    return this.inWatched ? 'in-watched' : this.inQueue ? 'in-queue' : '';\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n\n    return genreNames.join(', ');\n  }\n\n  #getInWatched() {\n    return !!dataStorage.getWatched().find(item => item === this.id);\n  }\n\n  #getInQueue() {\n    return !!dataStorage.getQueue().find(item => item === this.id);\n  }\n\n  #getGenres() {\n    return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    const fullPosterPatch = `${API_IMG_URL}${poster_path}`;\n    return fullPosterPatch;\n    // return NOPOSTER_IMG_URL;\n\n    // const poster = new Image();\n    // poster.src = fullPosterPatch;\n    //\n    // poster.onload = () => fullPosterPatch;\n    // poster.onerror = () => alert(\"NoImage\");\n  }\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params) {\n  // depending on params requests API or data\n  if (!params) {\n    API.getTrending()\n      .then(responseData => {\n        console.log(\n          `Current page: ${responseData.page}, total page: ${responseData.total_pages}`\n        ); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        const objectsArray = [];\n\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n\n          objectsArray.push(movie);\n        });\n\n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n}\n\nexport function getAndShowLibrary(idArray) {\n  let promisesMovies = [];\n  idArray.forEach(movieId => {\n    promisesMovies.push(\n      API.getMovie(movieId)\n        .then(response => {\n          response.genres = response.genres.map(item => {\n            return item.id;\n          });\n          const libMovie = new Movie(response);\n          return libMovie;\n        })\n        .catch(result => console.log(result))\n    );\n  });\n  Promise.all(promisesMovies).then(response => {\n    showMovies(response);\n  });\n}\n\nexport function getMovieInfo(id) {\n  if (id) {\n    API.getMovie(id).then(movieDetails => {\n      const movie = new Movie(movieDetails);\n      showMovieInfo(movie);\n    });\n\n    refs.movieModal.classList.remove('is-hidden');\n  }\n}\n\nexport function searchMovies(params, page = 1) {\n  // depending on params searches films in current list\n  if (params) {\n    API.searchMovie(params, page)\n      .then(responseData => {\n        console.log(\n          `Current page: ${responseData.page}, total page: ${responseData.total_pages}`\n        ); // --> for pagination\n        return responseData.results;\n      })\n      .then(movieList => {\n        const objectsArray = [];\n        movieList.map(movieItem => {\n          const movie = new Movie(movieItem); // class instance\n\n          objectsArray.push(movie);\n        });\n\n        showMovies(objectsArray);\n      })\n      .catch(result => console.log(result));\n  }\n}\n","import { refs } from \"./global\";\nrefs.loader = document.querySelector('.lds-ripple');\nconst DELAY = 500;\n\nexport const showLoader = () => {\n    refs.loader.classList.add('loaded-hiding');\n    console.log(\"loader\");\n}\n\nexport const hideLoader = () => {\n    refs.loader.classList.add('loaded');\n    refs.loader.classList.remove('loaded-hiding');\n}\n\n// window.onload = function () {\n//     showLoader();\n//     window.setTimeout(hideLoader(), DELAY);\n// }\n\n// window.onload = function () {\n//     document.body.classList.add('loaded-hiding');\n//     window.setTimeout(function () {\n//         document.body.classList.add('loaded');\n//         document.body.classList.remove('loaded-hiding');\n//     }, DELAY);\n// }","// module for interface elements and their event listeners\n\nimport { API_KEY, refs, watchedIdArr, queueIdArr } from './global';\nimport {\n  getMovieList,\n  searchMovies,\n  getMovieInfo,\n  getAndShowLibrary,\n} from './movies';\nimport { modalInit } from './modal';\nimport { clearMovies } from './markup';\nimport { showLoader, hideLoader } from './loader';\n\nimport { DataStorage } from './data';\nconst data = new DataStorage();\n\nconst SCROLL_PAGE_LEN = 6;\nlet currentLibraryArr = [];\nconst pageObserver = new IntersectionObserver(onScroll, {\n  rootMargin: '0px 0px 200px 0px',\n});\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n  // showLoader();\n  // hideLoader();\n\n  modalInit();\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.movieModal = document.querySelector('.movie-modal');\n  refs.searchForm = document.querySelector('#movie-search');\n  refs.observeTarget = document.querySelector('.sentinel');\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    refs.searchForm.addEventListener('submit', onMoviesSearch);\n    refs.cardsBox.addEventListener('click', onActionMovieCard);\n  } catch (error) {\n    console.log(error);\n  }\n\n  getMovieList();\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  // location.reload();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n  clearMovies();\n  getMovieList();\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  onLibraryWatchBtnClick();\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  clearMovies();\n  currentLibraryArr = data.getWatched();\n  pageObserver.observe(refs.observeTarget);\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  clearMovies();\n  currentLibraryArr = data.getQueue();\n  pageObserver.observe(refs.observeTarget);\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n  }\n}\n\nfunction onMoviesSearch(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value;\n  refs.cardsBox.innerHTML = '';\n  clearMovies();\n  searchMovies(query);\n}\n\nfunction onActionMovieCard(event) {\n  event.preventDefault();\n\n  let btnClicked = false;\n\n  event.path.map(currentMovieLink => {\n    if (currentMovieLink.nodeName === 'BUTTON') {\n      if (currentMovieLink.classList.contains('in-watched')) {\n        console.log('onInWatchedBtn()'); // <----- add function\n      } else if (currentMovieLink.classList.contains('in-queue')) {\n        console.log('onInQueueBtn()'); // <----- add function\n      }\n      btnClicked = true;\n      // event.stopImmediatePropagation();\n    }\n\n    if (currentMovieLink.nodeName === 'A' && !btnClicked) {\n      getMovieInfo(currentMovieLink.dataset.id);\n\n      // event.stopImmediatePropagation();\n    }\n  });\n}\n\nfunction onScroll() {\n  console.log(`i'm scrolling to the infinity`);\n  if (currentLibraryArr.length > SCROLL_PAGE_LEN) {\n    const newPage = currentLibraryArr.splice(0, SCROLL_PAGE_LEN);\n    getAndShowLibrary(newPage);\n    return;\n  }\n  pageObserver.unobserve(refs.observeTarget);\n  getAndShowLibrary(currentLibraryArr);\n}\n","import './sass/main.scss'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\n\nimport { DataStorage } from './js/data';\nconst data = new DataStorage();\n\nconst temporaryWatchedList = [\n  299536, 383498, 500664, 466282, 455980, 62286, 631843, 294793, 22949, 547016,\n  11635, 785663, 22660, 9547, 6977, 14912, 6957, 11520, 752505, 498743, 9627,\n  26518, 212, 156981, 13280, 15602, 282296, 498301, 72640, 69778, 488818, 11331,\n  43345, 543580, 429203, 31592, 40719, 83989, 297462, 74654, 59973, 44919,\n  28124, 915659, 78734, 9629, 913867, 40685, 79775, 44675, 40369, 351281, 25796,\n  55086, 248688, 967540, 121163, 620897, 67149, 85706, 59906, 88769, 983101,\n  309049, 75864, 29400,\n];\nconst temporaryQueueList = [\n  489931, 454283, 421792, 429300, 857, 470918, 379686, 340102, 529203, 11688,\n  755812, 18239, 11596, 62838, 597316, 820446, 13417, 11699, 10985, 975278,\n  13931, 3131, 772, 11025, 1103, 12637, 14011, 4960, 3681, 214597, 10952, 13761,\n  928, 15363, 277432, 9686, 14536, 9262, 10641, 11400, 553903, 37534, 183443,\n  567220, 79723, 382272, 9731, 95608, 10473, 497864, 5227, 21430, 30874, 9558,\n  46523, 496274, 10281, 299513, 18222, 197696, 19616, 4728, 12572, 396398,\n  11308, 36850,\n];\nfor (let i = 0; i < temporaryWatchedList.length; i += 1) {\n  data.addToWatched(temporaryWatchedList[i]);\n}\nfor (let i = 0; i < temporaryQueueList.length; i += 1) {\n  data.addToQueue(temporaryQueueList[i]);\n}\n// console.log(data.getWatched());\n// console.log(data.getQueue());\n//====================================================================================\n"],"names":["Object","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","$063512fb45095f43$export$21666b427502ea6d","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","parcelRequire","__esModule","$8a7e756c566dd1ea$var$movieModal","document","querySelector","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$onCloseClick","event","target","nodeName","classList","remove","body","$263aef85a4d00bfb$export$2de6f981755ee2d3","cardsBox","innerHTML","$263aef85a4d00bfb$export$ee74f1750741a03b","objectsArray","codeHTML","map","movie","watchedOrQueueClass","id","posterPath","title","genresInRow","releaseDate","$263aef85a4d00bfb$var$printHTMLmarkup","$263aef85a4d00bfb$export$484a3397ac1ebd1","movieObject","voteAverage","voteCount","popularity","overview","HTMLString","$64b03a065230eaf5$exports","JSON","parse","$a7fe6be5afb57be9$var$_fetchQuery","WeakSet","$a7fe6be5afb57be9$var$_loadGenres","$a7fe6be5afb57be9$export$2e2bcd8739ae039","getTrending","pageNum","isDay","pathParams","resource","mediaType","timeWindow","split","this","searchParams","URLSearchParams","api_key","page","$parcel$interopDefault","$a7fe6be5afb57be9$var$fetchQuery","call","searchMovie","query","getMovie","movieId","getGenres","genres","constructor","_instance","searchQuery","$a7fe6be5afb57be9$var$loadGenres","fetch","then","response","ok","Error","status","json","list","result","console","log","$deb185f198c84388$var$_setWatched","$deb185f198c84388$var$_setQueue","$deb185f198c84388$export$e95767ffe2e60cec","getWatched","serializedData","localStorage","getItem","err","error","getQueue","addToWatched","watchedArr","includes","push","$deb185f198c84388$var$setWatched","removeFromWatched","index","indexOf","splice","addToQueue","queueArr","$deb185f198c84388$var$setQueue","removeFromQueue","setItem","stringify","$98a09d5e2e3ad76c$var$dataStorage","$98a09d5e2e3ad76c$var$_parseGenresByString","$98a09d5e2e3ad76c$var$_getInWatched","$98a09d5e2e3ad76c$var$_getInQueue","$98a09d5e2e3ad76c$var$_getGenres","$98a09d5e2e3ad76c$var$_getPosterPath","$98a09d5e2e3ad76c$var$Movie","maxCount","$98a09d5e2e3ad76c$var$parseGenresByString","inWatched","inQueue","responseData","$98a09d5e2e3ad76c$var$getPosterPath","poster_path","originalTitle","original_title","genre_ids","release_date","substr","$98a09d5e2e3ad76c$var$getInWatched","$98a09d5e2e3ad76c$var$getInQueue","vote_average","vote_count","item","genreList","$98a09d5e2e3ad76c$var$getGenres","genreNames","i","length","findValue","find","name","join","$98a09d5e2e3ad76c$var$API","$98a09d5e2e3ad76c$export$a7ba856b7be83d1e","params","total_pages","results","movieList","movieItem","catch","$98a09d5e2e3ad76c$export$d41fb6dd6e813260","idArray","promisesMovies","forEach","Promise","all","$98a09d5e2e3ad76c$export$b0c4d3ac9887d994","loader","$292b382f80842f30$var$data","$292b382f80842f30$var$currentLibraryArr","$292b382f80842f30$var$pageObserver","IntersectionObserver","unobserve","observeTarget","rootMargin","$292b382f80842f30$var$onHomeLinkClick","preventDefault","header","$292b382f80842f30$var$onLibraryLinkClick","$292b382f80842f30$var$onLibraryWatchBtnClick","libraryWatchBtn","libraryQueBtn","observe","$292b382f80842f30$var$onLibraryQueBtnClick","$292b382f80842f30$var$openTeamModal","window","addEventListener","$292b382f80842f30$var$checkKeyPress","$292b382f80842f30$var$closeTeamModal","removeEventListener","code","$292b382f80842f30$var$onBackdropClick","currentTarget","$292b382f80842f30$var$onMoviesSearch","elements","$292b382f80842f30$var$onActionMovieCard","btnClicked","path","currentMovieLink","contains","dataset","movieDetails","movieModal","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","searchForm","$1f0dc3b9307be026$var$data","$1f0dc3b9307be026$var$temporaryWatchedList","$1f0dc3b9307be026$var$temporaryQueueList","i1"],"version":3,"file":"index.38cc64c1.js.map"}