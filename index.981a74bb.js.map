{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-4d16f9a35f7e589a.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@parcel/runtime-js/lib/runtime-6f22470e4532505e.js","src/js/global.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/dummy-array-objs/genres.json","src/js/movie-api.js","src/js/slider.js","src/js/data.js","src/js/modal.js","src/js/markup.js","src/js/loader.js","src/js/pagination.js","src/js/movies.js","src/js/action-card-btn.js","src/js/scroll-to-top.js","src/js/controller.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"iHCDC\")).toString();","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.981a74bb.js\\\",\\\"iHCDC\\\":\\\"noposter.a2b62a5f.jpg\\\",\\\"7mVsD\\\":\\\"index.f5df5942.css\\\"}\"));","// module for all the global constants and variables\n\n// export const API_KEY = '8302862792abaeee103b53516f1a680a';\nexport const API_KEY = 'ed9b8dd4dcf22d9d746c4e21c6321e97';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_IMG_URL = 'http://image.tmdb.org/t/p/w500';\nexport const NOPOSTER_IMG_URL = require('./../images/noposter.jpg');\n// export const NOPOSTER_IMG_URL = 'https://i.ibb.co/PzSPh6q/noposter.jpg';\n\nexport const moviesCashe = {};\nmoviesCashe.state = [];\n\nexport const refs = {};\n// export const watchedIdArr = [];\n// export const queueIdArr = [];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","{\n  \"genres\": [\n    {\n      \"id\": 28,\n      \"name\": \"Action\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"Adventure\"\n    },\n    {\n      \"id\": 16,\n      \"name\": \"Animation\"\n    },\n    {\n      \"id\": 35,\n      \"name\": \"Comedy\"\n    },\n    {\n      \"id\": 80,\n      \"name\": \"Crime\"\n    },\n    {\n      \"id\": 99,\n      \"name\": \"Documentary\"\n    },\n    {\n      \"id\": 18,\n      \"name\": \"Drama\"\n    },\n    {\n      \"id\": 10751,\n      \"name\": \"Family\"\n    },\n    {\n      \"id\": 14,\n      \"name\": \"Fantasy\"\n    },\n    {\n      \"id\": 36,\n      \"name\": \"History\"\n    },\n    {\n      \"id\": 27,\n      \"name\": \"Horror\"\n    },\n    {\n      \"id\": 10402,\n      \"name\": \"Music\"\n    },\n    {\n      \"id\": 9648,\n      \"name\": \"Mystery\"\n    },\n    {\n      \"id\": 10749,\n      \"name\": \"Romance\"\n    },\n    {\n      \"id\": 878,\n      \"name\": \"Science Fiction\"\n    },\n    {\n      \"id\": 10770,\n      \"name\": \"TV Movie\"\n    },\n    {\n      \"id\": 53,\n      \"name\": \"Thriller\"\n    },\n    {\n      \"id\": 10752,\n      \"name\": \"War\"\n    },\n    {\n      \"id\": 37,\n      \"name\": \"Western\"\n    },\n    {\n      \"id\": 1982,\n      \"name\": \"Dummy\"\n    }\n  ]\n}","// module for working with API\n// to repeat last search with new page get function in this.repeatLastSearch;\nimport { API_BASE_URL, API_KEY } from './global';\nimport * as initialGenres from './dummy-array-objs/genres.json';\n\nexport default class APIService {\n  constructor() {\n    if (APIService._instance) {\n      return APIService._instance;\n    }\n    APIService._instance = this;\n\n    this.searchQuery = '';\n    this.genres = initialGenres.genres;\n    this.repeatLastSearch = null;\n\n    this.#loadGenres();\n  }\n\n  #fetchQuery(pathParams, searchParams) {\n    return fetch(`${API_BASE_URL}/${pathParams}?${searchParams}`).then(\n      response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      }\n    );\n  }\n\n  // TRENDING\n  getTrending(pageNum = 1, isDay = false) {\n    const pathParams = {\n      resource: 'trending',\n      mediaType: 'movie',\n      timeWindow: isDay ? 'day' : 'week',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.timeWindow}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n    });\n\n    this.repeatLastSearch = (page = 1) => this.getTrending(page, isDay); //function assigns itself with only page parameter\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // SEARCH\n  searchMovie(query, pageNum = 1) {\n    // Path params\n    const pathParams = {\n      resource: 'search',\n      mediaType: 'movie',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n      page: pageNum,\n      query,\n    });\n\n    this.repeatLastSearch = (page = 1) => this.searchMovie(query, page); //function assigns itself with only page parameter\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GET MOVIE\n  getMovie(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n\n      get split() {\n        return `${this.resource}/${this.id}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // MOVIE VIDEOS\n  getVideos(movieId) {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      id: movieId,\n      mediaType: 'videos',\n\n      get split() {\n        return `${this.resource}/${this.id}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // PREMIERS\n  getPremiers() {\n    // Path params\n    const pathParams = {\n      resource: 'movie',\n      mediaType: 'upcoming',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    return this.#fetchQuery(pathParams.split, searchParams);\n  }\n\n  // GENRES\n  #loadGenres() {\n    // return genres.genres;\n    const pathParams = {\n      resource: 'genre',\n      mediaType: 'movie',\n      list: 'list',\n\n      get split() {\n        return `${this.resource}/${this.mediaType}/${this.list}`;\n      },\n    };\n\n    // Search params\n    const searchParams = new URLSearchParams({\n      api_key: API_KEY,\n    });\n\n    this.#fetchQuery(pathParams.split, searchParams).then(result => {\n      this.genres = result.genres;\n      console.log('loadGenres complete');\n    });\n  }\n\n  getGenres() {    \n    return this.genres;    \n  }\n}\n","import APIService from './movie-api';\nimport { API_IMG_URL, moviesCashe } from './global';\nimport { Movie } from './movies';\n\nconst api = new APIService();\nconst genres = api.getGenres().reduce((acc, genre) => {\n  return { ...acc, [genre.id]: genre.name };\n}, {});\n\nexport function showSliderMovies(selector) {\n  api\n    .getPremiers()\n    .then(res => res.results)\n    .then(data => {\n      sliderCardsTpl(data, selector);\n      splide.mount(window.splide.Extensions);\n    })\n    .catch(reject => console.log(reject));\n}\n\nexport const splide = new Splide('.splide', {\n  type: 'loop',\n  drag: 'free',\n  focus: 'center',\n  gap: '20px',\n  pagination: false,\n  perPage: 10,\n  autoScroll: {\n    speed: 1,\n  },\n});\n\nfunction getGenresForSlider(genreArr, genres) {\n  const showedGenres = [];\n  let index = 0;\n  for (const item of genreArr) {\n    index++;\n    if (index > 2) {\n      showedGenres.push('others');\n      break;\n    }\n    showedGenres.push(genres[item]);\n  }\n\n  return showedGenres.join(', ');\n}\n\nfunction sliderCardsTpl(objectsArray, selector) {\n  objectsArray.map(obj => {\n    const movie = new Movie(obj);\n    moviesCashe.state.push(movie);\n    const gendersList = getGenresForSlider(obj.genre_ids, genres);\n    selector.innerHTML += `\n        <li class=\"card splide__slide\">\n          <a href=\"\" class=\"card-link\" data-id=\"${obj.id}\">\n            <div class=\"splide__img-container\">\n              <img\n                src=\"${API_IMG_URL}${obj.poster_path}\" \n                class=\"splide__img\"\n                alt=\"\"\n              />\n            </div>\n            <div class=\"splide__card-body\">\n              <p class=\"splide__card-title\"><b>${obj.title}</b></p>\n              <p class=\"splide__card-genres\"><b>${gendersList} | ${obj.release_date.slice(\n      0,\n      4\n    )}</b>\n              </p>\n            </div>\n          </a>\n        </li>`;\n  });\n}\n","export class DataStorage {\n  constructor() {\n    // singleton pattern\n    if (DataStorage._instance) {\n      return DataStorage._instance;\n    }\n    DataStorage._instance = this;\n    // singleton pattern\n  }\n\n  getWatched() {\n    try {\n      const serializedData = localStorage.getItem('watched');\n      const movieArr =\n        serializedData === null ? [] : JSON.parse(serializedData);\n      return movieArr.filter(item => item.hasOwnProperty('id'));\n    } catch (err) {\n      console.error('Get library error: ', err);\n    }\n    return [];\n  }\n\n  getQueue() {\n    try {\n      const serializedData = localStorage.getItem('queue');\n      const movieArr =\n        serializedData === null ? [] : JSON.parse(serializedData);\n      return movieArr.filter(item => item.hasOwnProperty('id'));\n    } catch (err) {\n      console.error('Get library error: ', err);\n    }\n    return [];\n  }\n\n  #setWatched(watchedArr) {\n    try {\n      localStorage.setItem('watched', JSON.stringify(watchedArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  #setQueue(queueArr) {\n    try {\n      localStorage.setItem('queue', JSON.stringify(queueArr));\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  addToWatched(movie) {\n    const watchedArr = this.getWatched();\n    let check = false;\n    try {\n      check = watchedArr.find(item => item.id === movie.id);\n    } catch (err) {\n      console.log(err);\n    }\n    if (check) {\n      return;\n    }\n    watchedArr.unshift(movie);\n    this.#setWatched(watchedArr);\n  }\n\n  removeFromWatched(movie) {\n    let id = 0;\n    if (typeof movie === 'number') {\n      id = movie;\n      console.log('number!');\n    } else {\n      id = movie.id;\n      console.log('not a number!');\n    }\n    const watchedArr = this.getWatched();\n    const newWatchedArr = watchedArr.filter(item => item.id !== id);\n    this.#setWatched(newWatchedArr);\n  }\n\n  addToQueue(movie) {\n    const queueArr = this.getQueue();\n    if (queueArr.find(item => item.id === movie.id)) {\n      return;\n    }\n    queueArr.unshift(movie);\n    this.#setQueue(queueArr);\n  }\n\n  removeFromQueue(movie) {\n    let id = 0;\n    if (typeof movie === 'number') {\n      id = movie;\n      console.log('number!');\n    } else {\n      id = movie.id;\n      console.log('not a number!');\n    }\n    const queueArr = this.getQueue();\n    const newQueueArr = queueArr.filter(item => item.id !== id);\n    this.#setQueue(newQueueArr);\n  }\n}\n","import { splide } from './slider';\nimport { DataStorage } from './data';\nimport { refs, moviesCashe } from './global';\n\nconst data = new DataStorage();\nlet movieModal = document.querySelector('.movie-modal');\nlet backdrop = document.querySelector('.backdrop');\nlet closeBtn = movieModal.querySelector('[data-close]');\nlet queueBtnModal;\nlet watchedBtnModal;\n\nexport function modalInit() {\n  movieModal = document.querySelector('.movie-modal');\n  backdrop = document.querySelector('.backdrop');\n  closeBtn = movieModal.querySelector('[data-close]');\n\n  //movieModal.addEventListener('click', onCloseClick);\n  backdrop.addEventListener('click', onCloseClick);\n  closeBtn.addEventListener('click', onCloseClick);\n}\n\nexport function openModal() {\n  movieModal.classList.remove('is-hidden');\n  movieModal.classList.add('open');\n  document.body.classList.add('modal-open');\n  splide.Components.AutoScroll.pause();\n}\n\nexport function closeModal() {\n  movieModal.classList.remove('open');\n  movieModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n  splide.Components.AutoScroll.play();\n}\n\nfunction onCloseClick() {\n  closeModal();\n}\n\nexport function printToModal(HTMLString) {\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.innerHTML = HTMLString;\n\n  console.log('currentMovieLi', refs.currentMovieLi);\n\n  // get modal action buttons\n  queueBtnModal = modalContent.querySelector('[data-queue-btn]');\n  watchedBtnModal = modalContent.querySelector('[data-watched-btn]');\n  const movieId = Number(queueBtnModal.dataset.movieId);\n\n  if (data.getQueue().find(item => item.id === movieId)) {\n    queueBtnModal.classList.add('active-btn');\n  }\n  if (data.getWatched().find(item => item.id === movieId)) {\n    watchedBtnModal.classList.add('active-btn');\n  }\n\n  queueBtnModal.addEventListener('click', onQueueBtnModal);\n  watchedBtnModal.addEventListener('click', onWatchedBtnModal);\n}\n\n// action btn in the movie modal\nfunction onQueueBtnModal(event) {\n  console.log('cashe is ', moviesCashe);\n  const currentMovieId = event.target.dataset.movieId;\n  const currentMovieIdNum = Number(currentMovieId);\n\n  if (\n    data.getWatched().find(item => item.id === currentMovieIdNum) &&\n    !queueBtnModal.classList.contains('active-btn')\n  ) {\n    data.removeFromWatched(currentMovieIdNum);\n    watchedBtnModal.classList.remove('active-btn');\n    if (refs.currentMovieLi) {\n      refs.currentMovieLi.classList.remove('in-watched');\n    }\n  }\n\n  let movie = data.getQueue().find(item => item.id === currentMovieIdNum);\n  if (movie) {\n    data.removeFromQueue(currentMovieIdNum);\n    event.target.classList.remove('active-btn');\n    if (refs.currentMovieLi) {\n      refs.currentMovieLi.classList.remove('in-queue');\n    }\n\n    // add notify\n    return;\n  }\n\n  if (!movie) {\n    movie = moviesCashe.state.find(item => item.id === currentMovieIdNum);\n  }\n  data.addToQueue(movie);\n  event.target.classList.add('active-btn');\n  if (refs.currentMovieLi) {\n    refs.currentMovieLi.classList.add('in-queue');\n  }\n\n  // add notify\n}\n\nfunction onWatchedBtnModal(event) {\n  console.log('cashe is ', moviesCashe.state);\n  const currentMovieId = event.target.dataset.movieId;\n  const currentMovieIdNum = Number(currentMovieId);\n\n  if (\n    data.getQueue().find(item => item.id === currentMovieIdNum) &&\n    !watchedBtnModal.classList.contains('active-btn')\n  ) {\n    data.removeFromQueue(currentMovieIdNum);\n    queueBtnModal.classList.remove('active-btn');\n    if (refs.currentMovieLi) {\n      refs.currentMovieLi.classList.remove('in-queue');\n    }\n  }\n\n  let movie = data.getWatched().find(item => item.id === currentMovieIdNum);\n  if (movie) {\n    data.removeFromWatched(currentMovieIdNum);\n    event.target.classList.remove('active-btn');\n    if (refs.currentMovieLi) {\n      refs.currentMovieLi.classList.remove('in-watched');\n    }\n\n    // add notify\n    return;\n  }\n\n  if (!movie) {\n    movie = moviesCashe.state.find(item => item.id === currentMovieIdNum);\n  }\n  data.addToWatched(movie);\n  event.target.classList.add('active-btn');\n  if (refs.currentMovieLi) {\n    refs.currentMovieLi.classList.add('in-watched');\n  }\n\n  // add notify\n}\n","// module for all the functions generating markup\nconst cardSection = document.querySelector('.card-section');\n\nimport { API_IMG_URL, refs } from './global';\nimport { genresInRow, watchedOrQueueClass } from './movies';\nimport { openModal, printToModal } from './modal';\n\nexport function clearMovies() {\n  refs.cardsBox.innerHTML = '';\n}\n\nexport function showMovies(objectsArray) {\n  let codeHTML = '';\n  objectsArray.map(movie => {\n    codeHTML += `\n        <li class=\"card ${watchedOrQueueClass(movie)}\">\n          <a href=\"\" class=\"card-link card-button-slider\" data-id=\"${movie.id}\">\n              <img\n                src=\"${movie.posterPath}\"\n                class=\"card-image\"\n                alt=\"\"\n              />\n              <div class=\"card-button-background\">\n                <button class=\"card-button in-watched\">watched</button>\n                <button class=\"card-button in-queue\">queue</button>\n              </div>\n            \n              </a>\n              <div class=\"card-label-wrapper\">\n                <div class=\"card-label-in-watched\"></div>\n                <div class=\"card-label-in-queue\"></div>\n              </div>\n            <div class=\"card-body\">\n              <p class=\"card-title\"><b>${movie.title}</b></p>\n              <p class=\"card-genres\"><b>${genresInRow(movie, 3)} | ${\n      movie.releaseDate\n    }</b></p>\n        </li>`;\n  });\n\n  printHTMLmarkup(codeHTML);\n}\n\n// Show elements on page\nfunction printHTMLmarkup(codeHTML) {\n  refs.cardsBox.innerHTML += codeHTML;\n}\n\nexport function showMovieInfo(movieObject) {\n  let codeHTML = `\n      <div class=\"movie-picture-box\">\n        <img\n          src=\"${movieObject.posterPath}\"\n          alt=\"movie-picture\"\n          class=\"movie-picture\"\n        />\n      </div>\n      <div class=\"info-container\">\n        <h1 class=\"movie-title\">${movieObject.title}</h1>\n        <ul class=\"movie-list\">\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Vote / Votes</p>\n              <div class=\"vote-box property\">\n              <p class=\"property-vote property-accent\" id=\"vote\">${\n                movieObject.voteAverage\n              }</p>\n              <span class=\"vote-slash\">/</span>\n              <p class=\"property-vote property-vote-alt\" id=\"votes\">${\n                movieObject.voteCount\n              }</p>\n            </div>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Popularity</p>\n              <p class=\"property\" id=\"popularity\">${movieObject.popularity}</p>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Original Title</p>\n              <p class=\"property\" id=\"title\">${movieObject.title}</p>\n          </li>\n          <li class=\"movie-item\">\n              <p class=\"movie-description\">Genre</p>\n              <p class=\"property\" id=\"genre\">${movieObject.genresInRow()}</p>\n          </li>\n          ${checkVideo(movieObject.video)}\n        </ul>\n        <article class=\"article\">\n          <p class=\"article-caption\">About</p>\n          <p class=\"article-text\">\n            ${movieObject.overview}\n          </p>\n        </article>\n        <div class=\"button-box\">\n          <button class=\"movie-button watched-btn\" data-watched-btn data-movie-id=${\n            movieObject.id\n          }></button>\n          <button class=\"movie-button queue-btn\" data-queue-btn data-movie-id=${\n            movieObject.id\n          }></button>\n        </div>\n      </div>`;\n\n  printToModal(codeHTML);\n  openModal();\n}\n\nfunction checkVideo(video) {\n  if (video) {\n    return `\n      <li class=\"movie-item\">\n        <p class=\"movie-description\">Trailer</p>\n        <a href=${video} target=\"_blank\" class=\"property\">▶ Play</a>\n      </li>\n    `; \n  }\n\n  return '';\n  \n}","import { refs } from './global';\n\nconst DELAY = 500;\n\nexport const showLoader = () => {\n  try {\n    refs.loader.classList.remove('is-hidden');\n  } catch (err) {\n    console.log('loader failed ', err);\n  }\n};\n\nexport const hideLoader = () => {\n  try {\n    refs.loader.classList.add('is-hidden');\n  } catch (err) {\n    console.log('loader failed ', err);\n  }\n};\n\n// window.onload = function () {\n//     showLoader();\n//     window.setTimeout(hideLoader(), DELAY);\n// }\n\n// window.onload = function () {\n//     document.body.classList.add('loaded-hiding');\n//     window.setTimeout(function () {\n//         document.body.classList.add('loaded');\n//         document.body.classList.remove('loaded-hiding');\n//     }, DELAY);\n// }\n","// const bntPrevious = document.querySelector(\"#btn-prev\");\n// const btnNext = document.querySelector(\"#btn-next\");\n// const pageList = document.querySelector(\".pagination-list\");\n// const pageLink = document.querySelector(\".pagination-link\");\n\nimport { getMovieList } from './movies';\n\nfunction generatePagList(array, currentPage) {\n  // const prevLink = document.createElement(\"a\");\n  // prevLink.classList.add(\"pagination-button\");\n  // prevLink.id = \"btn-prev\";\n  // prevLink.href = \"#\";\n  // prevLink.title = \"Previous page\";\n  // const svgPrev = document.createElement(\"svg\");\n  // svgPrev.classList.add(\"pag-icon\");\n  // svgPrev.classList.add(\"arrow-left\");\n  // svgPrev.height = \"16\";\n  // const usePrev = document.createElement(\"use\");\n  // usePrev.href = \"./images/icons/arrows.svg#icon-arrow-left\";\n\n  // const nextLink = document.createElement(\"a\");\n  // nextLink.classList.add(\"pagination-button\");\n  // nextLink.id = \"btn-next\";\n  // nextLink.href = \"#\";\n  // nextLink.title = \"Next page\";\n  // const svgNext = document.createElement(\"svg\");\n  // svgNext.classList.add(\"pag-icon\");\n  // svgNext.classList.add(\"arrow-right\");\n  // svgNext.height = \"16\";\n  // const useNext = document.createElement(\"use\");\n  // useNext.href = \"./images/icons/arrows.svg#icon-arrow-right\";\n\n  // svgPrev.append(usePrev);\n  // prevLink.append(svgPrev);\n\n  // svgNext.append(useNext);\n  // nextLink.append(svgNext);\n\n  const paginationArr = document.querySelectorAll('.pagination');\n\n  if (paginationArr.length > 0) {\n    paginationArr.forEach(pagination => {\n      const list = document.createElement('ul');\n      list.classList.add('pagination-list');\n\n      for (let i = 0; i < array.length; i += 1) {\n        const item = document.createElement('li');\n        item.classList.add('pagination-item');\n        const link = document.createElement('a');\n        link.classList.add('pagination-link');\n        link.innerText = array[i];\n\n        // link.innerText.array[i] = currentPage;\n        if (array[i] === currentPage) {\n          item.classList.add('current');\n        }\n\n        if (typeof array[i] === 'number') {\n          link.addEventListener('click', event => {\n            event.preventDefault;\n            getMovieList('repeat', array[i], 'repeat');\n          });\n        } else {\n          if (i === 1) {\n            link.addEventListener('click', event => {\n              event.preventDefault;\n              getMovieList('repeat', array[i + 1] - 1, 'repeat');\n            });\n          } else {\n            link.addEventListener('click', event => {\n              event.preventDefault;\n              getMovieList('repeat', array[i - 1] + 1, 'repeat');\n            });\n          }\n        }\n\n        item.append(link);\n        list.append(item);\n        pagination.replaceChildren(list);\n      }\n\n      return pagination;\n    });\n  }\n}\n\nexport function showPagination(totalPages, currentPage) {\n  if (totalPages === 0) {\n    hidePagination();\n    return;\n  }\n  const lastPages = totalPages - 3;\n  if (totalPages === 1) {\n    // make buttons invisible or make the class = \"invisible\" for div.pagination\n    // generatePagList([1], currentPage);\n    hidePagination();\n  } else if (totalPages <= 7) {\n    const curArray = [];\n    for (let i = 1; i <= totalPages; i += 1) {\n      curArray.push(i);\n    }\n    console.log(curArray);\n    generatePagList(curArray, currentPage);\n  }\n  if (totalPages > 7) {\n    if (currentPage <= 3) {\n      generatePagList([1, 2, 3, 4, 5, '...', totalPages], currentPage);\n\n      // return;\n    } else if (currentPage >= lastPages) {\n      generatePagList(\n        [\n          1,\n          '...',\n          totalPages - 4,\n          totalPages - 3,\n          totalPages - 2,\n          totalPages - 1,\n          totalPages,\n        ],\n        currentPage\n      );\n      // return;\n    } else {\n      generatePagList(\n        [\n          1,\n          '...',\n          currentPage - 1,\n          currentPage,\n          currentPage + 1,\n          '...',\n          totalPages,\n        ],\n        currentPage\n      );\n    }\n    // pagination.append(markup);\n    // return;\n  }\n}\n// showPagination(5, 1);\n// generatePagList([1, '...', 12, 13, 14, 15, 16, '...', 20], 14);\n\nexport function hidePagination() {\n  const paginationArr = document.querySelectorAll('.pagination');\n\n  if (paginationArr.length > 0) {\n    paginationArr.forEach(pagination => (pagination.innerHTML = ''));\n  }\n}\n","/*\n      ОПИСАНИЕ РАБОТЫ МОДУЛЯ\n\n      В модуле прописан класс \"Movie\" для работы с каждой карточкой фильма\n\n      --Получить список трендов (популярных фильмов за неделю):\n\n        В модуле \"controller.js\", при инициализации (функция \"init()\"\") визвана функция \"getMovieList()\".\n\n*/\n\n// main module to manipulate with data inside an application\n\nimport {\n  API_KEY,\n  API_BASE_URL,\n  API_IMG_URL,\n  NOPOSTER_IMG_URL,\n  refs,\n  moviesCashe,\n} from './global';\n\nimport { showMovies, showMovieInfo, clearMovies } from './markup';\nimport { showLoader, hideLoader } from './loader';\nimport APIService from './movie-api';\nimport { DataStorage } from './data.js';\nimport { showPagination, hidePagination } from './pagination';\nconst dataStorage = new DataStorage();\n\nexport class Movie {\n  constructor(responseData) {\n    this.id = responseData.id;\n    this.posterPath = this.#getPosterPath(responseData.poster_path);\n    this.title = responseData.title;\n    this.originalTitle = responseData.original_title;\n    this.popularity = responseData.popularity;\n    this.genres = responseData.genre_ids;\n    this.releaseDate = responseData.release_date\n      ? responseData.release_date.substr(0, 4)\n      : 'date not defined';\n    // this.inWatched = this.#getInWatched(); // this property is dynamic\n    // this.inQueue = this.#getInQueue(); // no need to assign inside object\n    this.voteAverage = responseData.vote_average;\n    this.voteCount = responseData.vote_count;\n    this.popularity = responseData.popularity;\n    this.overview = responseData.overview;\n    // this.video = null;\n    this.videos = [];\n\n    // В API метод getMovie возвращает жанры в свойстве \"genres\", значением которого есть массив объектов\n    // Поэтому, если не удалось получить список жанров - получаем из метода \"genres\"\n\n    if (!this.genres && responseData.genres) {\n      this.genres = [];\n      responseData.genres.map(item => {\n        this.genres.push(item.id);\n      });\n    }\n  }\n\n  // Genres in row\n  genresInRow(maxCount = 0) {\n    return this.#parseGenresByString(maxCount);\n  }\n\n  get watchedOrQueueClass() {\n    return this.inWatched ? 'in-watched' : this.inQueue ? 'in-queue' : '';\n  }\n\n  get video() {\n    if (this.videos.length > 0) {\n      return this.videos[0]; // TEMP - getting only first video\n    }\n\n    return '';\n  }\n\n  // Private methods\n\n  #parseGenresByString(maxCount = 0) {\n    const genreList = this.#getGenres();\n    const genreNames = [];\n\n    for (let i = 0; i < this.genres.length; i++) {\n      if (maxCount && i === maxCount - 1 && i < this.genres.length - 1) {\n        genreNames.push('others');\n        break;\n      }\n\n      const findValue = genreList.find(item => item.id === this.genres[i]);\n\n      if (findValue) {\n        genreNames.push(findValue.name);\n      }\n    }\n    if (genreNames.length === 0) {\n      return 'genre not defined';\n    }\n    return genreNames.join(', ');\n  }\n\n  // #getInWatched() {\n  //   return !!dataStorage.getWatched().find(item => item === this.id);\n  // }\n\n  // #getInQueue() {\n  //   return !!dataStorage.getQueue().find(item => item === this.id);\n  // }\n\n  #getGenres() {\n    return API.getGenres();\n  }\n\n  #getPosterPath(poster_path) {\n    if (poster_path) {\n      return `${API_IMG_URL}${poster_path}`;\n    }\n    return NOPOSTER_IMG_URL;\n  }\n\n  getVideos(number = 0) {\n    return API.getVideos(this.id);\n  }\n}\n\n// const dataStorage = new DataStorage(API_KEY);\nconst API = new APIService();\n\n// let currentMovieList = [{ film1 }, { film2 }, { film3 }];\n\nexport function getMovieList(params, page = 1, mode = '') {\n  showLoader();\n  hidePagination();\n\n  // depending on params choses API function\n  console.log('getMovies with params ', params, page, mode);\n  let queryFunction;\n  if (!params) {\n    queryFunction = () => API.getTrending();\n  }\n  if (params && !mode) {\n    queryFunction = () => API.searchMovie(params, page);\n  }\n  if (params && mode === 'repeat') {\n    queryFunction = () => API.repeatLastSearch(page);\n  }\n  if (params && mode === 'premiers') {\n    queryFunction = () => API.getPremiers();\n  }\n\n  queryFunction()\n    .then(responseData => {\n      console.log(\n        `Current page: ${responseData.page}, total pages: ${responseData.total_pages}`\n      ); // --> for pagination\n      showPagination(responseData.total_pages, responseData.page);\n      if (responseData.total_pages === 0) {\n        refs.cardsSection.classList.add('empty-main-library');\n      } else {\n        refs.cardsSection.classList.remove('empty-main-library');\n      }\n      return responseData.results;\n    })\n    .then(movieList => {\n      const objectsArray = [];\n\n      movieList.map(movieItem => {\n        const movie = new Movie(movieItem); // class instance\n\n        objectsArray.push(movie);\n        moviesCashe.state.push(movie); // array cashing\n      });\n\n      clearMovies();\n      showMovies(objectsArray);\n      hideLoader();\n    })\n    .catch(result => {\n      console.log(result);\n    });\n  return;\n}\n\nexport function getAndShowLibrary(moviesArray) {\n  moviesCashe.state = moviesArray.filter(() => true); // array cloning\n  showMovies(moviesArray);\n}\n\n// export function getAndShowLibrary(idArray) {\n//   let promisesMovies = [];\n//   idArray.map(movieId => {\n//     // try {\n//     promisesMovies.push(\n//       API.getMovie(movieId)\n//         .then(response => {\n//           const libMovie = new Movie(response);\n//           response.genres = response.genres.map(item => {\n//             return item.id;\n//           });\n//           return libMovie;\n//         })\n//         .catch(err => {\n//           console.log(err);\n//           return 0;\n//         })\n//     );\n//   });\n//   Promise.all(promisesMovies)\n//     .then(response => {\n//       // console.log('Promise.all response is ', response);\n//       const clearMovieArray = response.filter(item => item != 0);\n//       // console.log('Filtered array is ', clearMovieArray);\n//       showMovies(clearMovieArray);\n//     })\n//     .catch(result => console.log(result));\n// }\n\nexport function getMovieInfo(id) {\n  if (id) {\n    API.getMovie(id).then(movieDetails => {\n      // Get movie info\n      const movie = new Movie(movieDetails);\n      movie.getVideos().then(videos => {\n        // Get movie video\n        videos.results.map(video => {\n          if (video.type === 'Trailer') {\n            movie.videos.push(`https://www.youtube.com/watch?v=${video.key}`);\n          }\n        });\n        showMovieInfo(movie);\n      });\n    });\n    // refs.movieModal.classList.remove('is-hidden');\n  }\n}\n\nexport function getPremiers() {\n  getMovieList('premiers', 1, 'premiers');\n\n  /* ------------------\n\n      В это место можно добавить обработчик вывода трендов\n      Переменная \"objectsArray\" содержит массив объектов фильмов (массив карточек)\n      Структура объекта:\n      {\n        id:             [ Идентификатор фильма ]\n        inQueue:        [ Фильм находиться в очереди на просмотр ]\n        inWatched:      [ Фильм находиться в просмотренных ]\n        originalTitle:  [ Оригинальное название фильма ]\n        overview:       [ Описание фильма ]\n        popularity:     [ Популярность фильма ]\n        posterPath:     [ Ссылка на постер фильма ]\n        releaseDate:    [ Год фильма ]\n        title:          [ Название фильма ]\n        voteAverage:    [ Рейтинг фильма ]\n        voteCount:      [ Количество проголосовавших ]\n      }\n\n      Пример: \n        showMovies(objectsArray) - вывод списка на лгавную страницу\n\n      ------------------ */\n}\n\nexport function genresInRow(movie, maxCount = 0) {\n  return parseGenresByString(movie, maxCount);\n}\n\nfunction parseGenresByString(movie, maxCount = 0) {\n  const genreList = API.genres;\n  const genreNames = [];\n\n  if (movie.genres.length === 0) {\n    genreNames.push('genre not defined');\n  }\n  for (let i = 0; i < movie.genres.length; i++) {\n    if (maxCount && i === maxCount - 1 && i < movie.genres.length - 1) {\n      genreNames.push('others');\n      break;\n    }\n\n    const findValue = genreList.find(item => item.id === movie.genres[i]);\n\n    if (findValue) {\n      genreNames.push(findValue.name);\n    }\n  }\n\n  return genreNames.join(', ');\n}\n\nexport function watchedOrQueueClass(movie) {\n  // return movie.inWatched ? 'in-watched' : movie.inQueue ? 'in-queue' : '';\n\n  const watchedArr = dataStorage.getWatched();\n  const queueArr = dataStorage.getQueue();\n  if (watchedArr.find(item => item.id === movie.id)) {\n    return 'in-watched';\n  }\n  if (queueArr.find(item => item.id === movie.id)) {\n    return 'in-queue';\n  }\n  return '';\n}\n","import { moviesCashe } from './global.js';\nimport { refs } from './global.js';\nimport { DataStorage } from './data.js';\nconst data = new DataStorage();\nexport let timerID = null;\n\n// action btn on the movie card\nexport function onQueueBtnCard(btn, id) {\n  console.log('cashe is ', moviesCashe.state);\n  const movieCard = btn.closest('.card');\n\n  if (data.getQueue().find(item => item.id === id)) {\n    cancelBtnApperingAndPlacement(movieCard);\n\n    timerID = setTimeout(() => {\n      refs.cancelBtn.classList.add('is-hidden');\n      refs.cancelBtn.classList.remove('cancel-animation');\n      data.removeFromQueue(id);\n      movieCard.classList.remove('in-queue');\n      movieCard.remove();\n    }, 3000);\n\n    return;\n  }\n\n  let movie = data.getWatched().find(item => item.id === id);\n  console.log(movie);\n  if (movie) {\n    data.removeFromWatched(id);\n    movieCard.classList.remove('in-watched');\n  }\n\n  if (!movie) {\n    movie = moviesCashe.state.find(item => item.id === id);\n  }\n  data.addToQueue(movie);\n  movieCard.classList.add('in-queue');\n  // add notify\n}\n\nexport function onWatchedBtnCard(btn, id) {\n  console.log('cashe is ', moviesCashe.state);\n  const movieCard = btn.closest('.card');\n\n  if (data.getWatched().find(item => item.id === id)) {\n    cancelBtnApperingAndPlacement(movieCard);\n\n    timerID = setTimeout(() => {\n      refs.cancelBtn.classList.add('is-hidden');\n      refs.cancelBtn.classList.remove('cancel-animation');\n      data.removeFromWatched(id);\n      movieCard.classList.remove('in-watched');\n      movieCard.remove();\n    }, 3000);\n    return;\n  }\n\n  let movie = data.getQueue().find(item => item.id === id);\n  if (movie) {\n    data.removeFromQueue(id);\n    movieCard.classList.remove('in-queue');\n  }\n\n  if (!movie) {\n    movie = moviesCashe.state.find(item => item.id === id);\n  }\n  data.addToWatched(movie);\n  movieCard.classList.add('in-watched');\n  // add notify\n}\n\nfunction cancelBtnApperingAndPlacement(movieCard) {\n  refs.cancelBtn.classList.remove('is-hidden');\n  refs.cancelBtn.classList.add('cancel-animation');\n  refs.cancelBtn.style.top = `${movieCard.offsetTop}px`;\n  refs.cancelBtn.style.left = `${Math.floor(movieCard.offsetLeft - 1)}px`;\n}\n","import { refs } from './global';\n\nrefs.scrollTop = document.querySelector('.scroll-top');\nrefs.body = document.querySelector(\"body\");\n\nrefs.body.onscroll = () => {\n    if (window.scrollY > 230) {\n        refs.scrollTop.classList.add(\"isShowScrollTop\");\n    } else if (window.scrollY < 230) {\n        refs.scrollTop.classList.remove(\"isShowScrollTop\")\n    }\n}\n\nexport function onClickScrollTop() {\n    window.scrollTo(0, 0);\n}","// module for interface elements and their event listeners\n\nimport { API_KEY, refs, moviesCashe } from './global';\nimport {\n  getMovieList,\n  getMovieInfo,\n  getAndShowLibrary,\n  getPremiers,\n} from './movies';\nimport { modalInit } from './modal';\nimport { clearMovies } from './markup';\nimport { showLoader, hideLoader } from './loader';\nimport { showSliderMovies, splide } from './slider';\n\nimport { DataStorage } from './data';\nimport { onQueueBtnCard, onWatchedBtnCard, timerID } from './action-card-btn';\n\nimport { onClickScrollTop } from './scroll-to-top';\nimport { hidePagination } from './pagination';\n\nconst data = new DataStorage();\n\nconst SCROLL_PAGE_LEN = 6;\nlet currentLibraryArr = [];\nconst pageObserver = new IntersectionObserver(onScroll, {\n  rootMargin: '0px 0px 200px 0px',\n});\n\nexport function init() {\n  //refs, event listeners, genres request, popular movies request\n  // showLoader();\n  // hideLoader();\n\n  moviesCashe.state = [];\n  modalInit();\n  refs.loader = document.querySelector('.lds-ripple');\n  refs.cardsBox = document.querySelector('.cards-box');\n  refs.header = document.querySelector('.header');\n  refs.homeLink = document.querySelector('#home');\n  refs.libraryLink = document.querySelector('#library');\n  refs.logo = document.querySelector('#logo');\n  refs.libraryWatchBtn = document.querySelector('#lib-w');\n  refs.libraryQueBtn = document.querySelector('#lib-q');\n  refs.ourTeamLink = document.querySelector('#our-team');\n  refs.closeModalBtn = document.querySelector('[data-action=\"close-modal\"]');\n  refs.backdrop = document.querySelector('.js-backdrop');\n  refs.teamModal = document.querySelector('.js-team-modal');\n  refs.movieModal = document.querySelector('.movie-modal');\n  refs.searchForm = document.querySelector('#movie-search');\n  refs.sliderContainer = document.querySelector('.splide');\n  refs.sliderList = document.querySelector('.splide__list');\n  refs.observeTarget = document.querySelector('.sentinel');\n  refs.scrollTop = document.querySelector('.scroll-top');\n  refs.body = document.querySelector('body');\n  refs.cardsSection = document.querySelector('.cards-section');\n  refs.pagination = document.querySelector('.pagination');\n  refs.searchInput = document.querySelector('.search-input');\n  refs.cancelBtn = document.querySelector('#cancel');\n  refs.currentMovieLi;\n\n  try {\n    refs.logo.addEventListener('click', onHomeLinkClick);\n    refs.homeLink.addEventListener('click', onHomeLinkClick);\n    refs.libraryLink.addEventListener('click', onLibraryLinkClick);\n    refs.libraryWatchBtn.addEventListener('click', onLibraryWatchBtnClick);\n    refs.libraryQueBtn.addEventListener('click', onLibraryQueBtnClick);\n    refs.ourTeamLink.addEventListener('click', openTeamModal);\n    refs.closeModalBtn.addEventListener('click', closeTeamModal);\n    refs.backdrop.addEventListener('click', onBackdropClick);\n    refs.searchForm.addEventListener('submit', onMoviesSearch);\n    refs.cardsBox.addEventListener('click', onActionMovieCard);\n    refs.sliderList.addEventListener('click', onSliderClick);\n    refs.scrollTop.addEventListener('click', onClickScrollTop);\n    refs.cancelBtn.addEventListener('click', () => {\n      onCancelBtnClick(timerID);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n  getMovieList();\n  showSliderMovies(refs.sliderList);\n\n  // when init page, check localStorage\n  data.getQueue();\n  data.getWatched();\n}\n\nfunction onHomeLinkClick(event) {\n  event.preventDefault();\n  // location.reload();\n  refs.header.classList.remove('header-library');\n  refs.header.classList.add('header-search');\n  refs.cardsSection.classList.remove('empty-library');\n  refs.cardsBox.classList.remove('hide-labels');\n  refs.sliderContainer.style.display = 'block';\n\n  pageObserver.unobserve(refs.observeTarget);\n\n  refs.searchInput.value = '';\n  clearMovies();\n  getMovieList();\n}\n\nfunction onLibraryLinkClick(event) {\n  event.preventDefault();\n  refs.header.classList.remove('header-search');\n  refs.header.classList.add('header-library');\n  refs.cardsBox.classList.add('hide-labels');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.cardsSection.classList.remove('empty-main-library');\n  refs.sliderContainer.style.display = 'none';\n\n  hidePagination();\n  if (data.getWatched().length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    onLibraryWatchBtnClick();\n  }\n}\n\nfunction onLibraryWatchBtnClick() {\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  refs.libraryWatchBtn.classList.add('accent-btn');\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  currentLibraryArr = data.getWatched();\n  moviesCashe.state = currentLibraryArr.filter(() => true);\n  if (currentLibraryArr.length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    refs.cardsSection.classList.remove('empty-library');\n    clearMovies();\n    // getAndShowLibrary(currentLibraryArr);\n    pageObserver.observe(refs.observeTarget);\n  }\n  // clearMovies();\n}\n\nfunction onLibraryQueBtnClick() {\n  refs.libraryQueBtn.classList.remove('accent-btn');\n  refs.libraryQueBtn.classList.add('accent-btn');\n  refs.libraryWatchBtn.classList.remove('accent-btn');\n  currentLibraryArr = data.getQueue();\n  moviesCashe.state = currentLibraryArr.filter(() => true);\n  if (currentLibraryArr.length === 0) {\n    refs.cardsSection.classList.add('empty-library');\n  } else {\n    refs.cardsSection.classList.remove('empty-library');\n    clearMovies();\n    pageObserver.observe(refs.observeTarget);\n  }\n}\n\nfunction openTeamModal() {\n  window.addEventListener('keydown', checkKeyPress);\n  refs.teamModal.classList.remove('is-hidden');\n  document.body.classList.add('modal-open');\n}\n\nfunction closeTeamModal() {\n  window.removeEventListener('keydown', checkKeyPress);\n  refs.teamModal.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n}\n\nfunction checkKeyPress(event) {\n  if (event.code === 'Escape') {\n    closeTeamModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    closeTeamModal();\n    // splide.Components.AutoScroll.play();\n  }\n}\n\nfunction onMoviesSearch(event) {\n  event.preventDefault();\n  const query = event.target.elements.query.value;\n  refs.cardsBox.innerHTML = '';\n  refs.sliderContainer.style.display = 'none';\n  clearMovies();\n  getMovieList(query);\n}\n\nfunction onActionMovieCard(event) {\n  event.preventDefault();\n\n  let btnClicked = false;\n\n  event.composedPath().map(currentMovieLink => {\n    // check btn events on the movie card and add/delete to/from the library\n    if (currentMovieLink.nodeName === 'BUTTON') {\n      const currentMovieId = currentMovieLink.closest('.card-link').dataset.id;\n      const currentMovieIdNum = Number(currentMovieId);\n\n      if (currentMovieLink.classList.contains('in-queue')) {\n        onQueueBtnCard(currentMovieLink, currentMovieIdNum);\n      } else if (currentMovieLink.classList.contains('in-watched')) {\n        onWatchedBtnCard(currentMovieLink, currentMovieIdNum);\n      }\n      btnClicked = true;\n      // event.stopImmediatePropagation();\n    }\n\n    // catch a movie link and open the movie modal\n    if (currentMovieLink.nodeName === 'A' && !btnClicked) {\n      const currentMovieId = currentMovieLink.dataset.id;\n      refs.currentMovieLi = currentMovieLink.closest('.card');\n\n      getMovieInfo(currentMovieId);\n\n      // event.stopPropagation();\n    }\n  });\n}\n\nfunction onScroll() {\n  console.log(`i'm scrolling to the infinity`);\n  if (currentLibraryArr.length > SCROLL_PAGE_LEN) {\n    const newPage = currentLibraryArr.splice(0, SCROLL_PAGE_LEN);\n    getAndShowLibrary(newPage);\n    return;\n  }\n  pageObserver.unobserve(refs.observeTarget);\n  getAndShowLibrary(currentLibraryArr);\n}\n\nfunction onSliderClick(evt) {\n  evt.preventDefault();\n  const id = Number(evt.target.closest('.card-link').dataset.id);\n\n  //search card in cardsBox if it exists (or even if not)\n  refs.currentMovieLi = refs.cardsBox\n    .querySelector(`[data-id=\"${id}\"]`)\n    ?.closest('li');\n  console.log('currentMovieLi', refs.currentMovieLi);\n  getMovieInfo(id);\n  if (!refs.movieModal.classList.contains('is-hidden')) {\n    splide.Components.AutoScroll.pause();\n  }\n}\n\nfunction onCancelBtnClick(timerID) {\n  clearTimeout(timerID);\n  refs.cancelBtn.classList.add('is-hidden');\n  refs.cancelBtn.classList.remove('cancel-animation');\n}\n","import './sass/main.scss'; // draft file\nimport { init } from './js/controller'; // movies\n\ndocument.addEventListener('DOMContentLoaded', init);\n\n//================================= test field =======================================\n\nimport { DataStorage } from './js/data';\nconst data = new DataStorage();\n\n// const temporaryWatchedList = [\n//   299536, 383498, 500664, 466282, 455980, 62286, 631843, 294793, 22949, 547016,\n//   11635, 785663, 22660, 9547, 6977, 14912, 6957, 11520, 752505, 498743, 9627,\n//   26518, 212, 156981, 13280, 15602, 282296, 498301, 72640, 69778, 488818, 11331,\n//   43345, 543580, 429203, 31592, 40719, 83989, 297462, 74654, 59973, 44919,\n//   28124, 915659, 78734, 9629, 913867, 40685, 79775, 44675, 40369, 351281, 25796,\n//   55086, 248688, 967540, 121163, 620897, 67149, 85706, 59906, 88769, 983101,\n//   309049, 75864, 29400, 299536, 383498, 500664, 466282, 455980, 62286, 631843,\n//   507086, 299536,\n// ];\n// const temporaryQueueList = [\n//   489931, 454283, 421792, 429300, 857, 470918, 379686, 340102, 529203, 11688,\n//   755812, 18239, 11596, 62838, 597316, 820446, 13417, 11699, 10985, 975278,\n//   13931, 3131, 772, 11025, 1103, 12637, 14011, 4960, 3681, 214597, 10952, 13761,\n//   928, 15363, 277432, 9686, 14536, 9262, 10641, 11400, 553903, 37534, 183443,\n//   567220, 79723, 382272, 9731, 95608, 10473, 497864, 5227, 21430, 30874, 9558,\n//   46523, 496274, 10281, 299513, 18222, 197696, 19616, 4728, 12572, 396398,\n//   11308, 36850, 648579,\n// ];\n\n// for (let i = 0; i < temporaryWatchedList.length; i += 1) {\n//   data.addToWatched(temporaryWatchedList[i]);\n// }\n// for (let i = 0; i < temporaryQueueList.length; i += 1) {\n//   data.addToQueue(temporaryQueueList[i]);\n// }\n\n// console.log(data.getWatched());\n// console.log(data.getQueue());\n// ====================================================================================\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","URL","parcelRequire","resolve","import","meta","url","toString","defineProperty","value","default","obj","privateCollection","has","TypeError","register","JSON","parse","$063512fb45095f43$export$41033dd99abc3e9f","$063512fb45095f43$export$22245281e30f04bb","$063512fb45095f43$export$21666b427502ea6d","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","__esModule","$64b03a065230eaf5$exports","$a7fe6be5afb57be9$var$_fetchQuery","WeakSet","$a7fe6be5afb57be9$var$_loadGenres","$a7fe6be5afb57be9$export$2e2bcd8739ae039","getTrending","pageNum","isDay","pathParams","resource","mediaType","timeWindow","split","this","searchParams","URLSearchParams","api_key","page","repeatLastSearch","$parcel$interopDefault","$a7fe6be5afb57be9$var$fetchQuery","call","searchMovie","query","getMovie","movieId","getVideos","getPremiers","getGenres","genres","constructor","_instance","searchQuery","$a7fe6be5afb57be9$var$loadGenres","fetch","then","response","ok","status","json","list","result","console","log","$57170e076db1eb28$var$api","$57170e076db1eb28$var$genres","reduce","acc","genre","name","$57170e076db1eb28$export$d65764e25c41af8f","selector","res","results","data","objectsArray","map","movie","$98a09d5e2e3ad76c$export$500e0c2444abaab5","state","push","gendersList","genreArr","genres1","showedGenres","index","item","join","$57170e076db1eb28$var$getGenresForSlider","genre_ids","innerHTML","poster_path","title","release_date","slice","$57170e076db1eb28$var$sliderCardsTpl","$57170e076db1eb28$export$5e3d2df35c41f564","mount","window","splide","Extensions","catch","reject","Splide","type","drag","focus","gap","pagination","perPage","autoScroll","speed","$deb185f198c84388$var$_setWatched","$deb185f198c84388$var$_setQueue","$deb185f198c84388$export$e95767ffe2e60cec","getWatched","serializedData","localStorage","getItem","filter","hasOwnProperty","err","error","getQueue","addToWatched","watchedArr","check","find","unshift","$deb185f198c84388$var$setWatched","removeFromWatched","newWatchedArr","addToQueue","queueArr","$deb185f198c84388$var$setQueue","removeFromQueue","newQueueArr","setItem","stringify","$8a7e756c566dd1ea$var$data","$8a7e756c566dd1ea$var$queueBtnModal","$8a7e756c566dd1ea$var$watchedBtnModal","$8a7e756c566dd1ea$var$movieModal","document","querySelector","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$closeBtn","$8a7e756c566dd1ea$var$onCloseClick","classList","remove","body","Components","AutoScroll","play","$8a7e756c566dd1ea$export$7199bec90a6d101e","HTMLString","modalContent","currentMovieLi","Number","dataset","addEventListener","$8a7e756c566dd1ea$var$onQueueBtnModal","$8a7e756c566dd1ea$var$onWatchedBtnModal","event","currentMovieId","target","currentMovieIdNum","contains","$263aef85a4d00bfb$export$2de6f981755ee2d3","cardsBox","$263aef85a4d00bfb$export$ee74f1750741a03b","codeHTML","$98a09d5e2e3ad76c$export$f45ed074124d88cf","posterPath","$98a09d5e2e3ad76c$export$55c1bb9c5cca552f","releaseDate","$263aef85a4d00bfb$var$printHTMLmarkup","$263aef85a4d00bfb$export$484a3397ac1ebd1","movieObject","video","voteAverage","voteCount","popularity","genresInRow","overview","pause","$bdfcdc80b4c38739$export$56525cbb1fcd885c","loader","$bdfcdc80b4c38739$export$5cee2c2772922923","$1bab9c519cfa82bc$var$generatePagList","array","currentPage","paginationArr","querySelectorAll","forEach","createElement","link","innerText","preventDefault","$98a09d5e2e3ad76c$export$a7ba856b7be83d1e","append","replaceChildren","$1bab9c519cfa82bc$export$f93f175716c54a10","totalPages","$1bab9c519cfa82bc$export$6fb66672b5aed27f","lastPages","curArray","$98a09d5e2e3ad76c$var$dataStorage","$98a09d5e2e3ad76c$var$_parseGenresByString","$98a09d5e2e3ad76c$var$_getGenres","$98a09d5e2e3ad76c$var$_getPosterPath","maxCount","$98a09d5e2e3ad76c$var$parseGenresByString","watchedOrQueueClass","inWatched","inQueue","videos","number","$98a09d5e2e3ad76c$var$API","responseData","$98a09d5e2e3ad76c$var$getPosterPath","originalTitle","original_title","substr","vote_average","vote_count","genreList","$98a09d5e2e3ad76c$var$getGenres","genreNames","findValue","params","mode","queryFunction","total_pages","cardsSection","movieList","movieItem","$98a09d5e2e3ad76c$export$d41fb6dd6e813260","moviesArray","$98a09d5e2e3ad76c$export$c4b266899e68448c","movieDetails","key","$98a09d5e2e3ad76c$var$parseGenresByString1","$9316123c6a1b8116$var$data","$9316123c6a1b8116$export$d99ee7f8669b3e6f","$9316123c6a1b8116$export$ea841437d939b35","btn","movieCard","closest","$9316123c6a1b8116$var$cancelBtnApperingAndPlacement","setTimeout","cancelBtn","$9316123c6a1b8116$export$d3821a3c06848687","style","top","offsetTop","left","Math","floor","offsetLeft","$9c4d348a70143412$export$d7dc0f5f152d77a7","scrollTo","scrollTop","onscroll","scrollY","$292b382f80842f30$var$data","$292b382f80842f30$var$currentLibraryArr","$292b382f80842f30$var$pageObserver","IntersectionObserver","splice","unobserve","observeTarget","rootMargin","$292b382f80842f30$var$onHomeLinkClick","header","sliderContainer","display","searchInput","$292b382f80842f30$var$onLibraryLinkClick","libraryWatchBtn","libraryQueBtn","$292b382f80842f30$var$onLibraryWatchBtnClick","observe","$292b382f80842f30$var$onLibraryQueBtnClick","$292b382f80842f30$var$openTeamModal","$292b382f80842f30$var$checkKeyPress","teamModal","$292b382f80842f30$var$closeTeamModal","removeEventListener","code","$292b382f80842f30$var$onBackdropClick","currentTarget","$292b382f80842f30$var$onMoviesSearch","elements","$292b382f80842f30$var$onActionMovieCard","btnClicked","composedPath","currentMovieLink","nodeName","$292b382f80842f30$var$onSliderClick","evt","ref","movieModal","homeLink","libraryLink","logo","ourTeamLink","closeModalBtn","backdrop","searchForm","sliderList","clearTimeout"],"version":3,"file":"index.981a74bb.js.map"}